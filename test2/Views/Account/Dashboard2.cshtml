@model test2.Models.DashboardViewModel

@{
    ViewBag.Title = "Compte Adhérent";
    Layout = "~/Views/shared/_LayoutPage3.cshtml";

}


<link href="~/CSS/styles.css" rel="stylesheet" />
<script src="~/js/scripts.js"></script>
<link href="~/assets/vendor/bootstrap-icons/bootstrap-icons.css" rel="stylesheet">
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<!-- Ajoutez cette balise à la fin de votre code HTML -->
<!-- Inclure Bootstrap -->
<script src="~/Scripts/jquery-3.7.1.min.js"></script>
<script src="https://ajax.googleapis.com/ajax/libs/jquery/1.11.1/jquery.min.js"></script>
<script src="//maxcdn.bootstrapcdn.com/bootstrap/3.2.0/js/bootstrap.min.js"></script>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://code.jquery.com/ui/1.13.1/jquery-ui.min.js"></script>
<link rel="stylesheet" href="https://code.jquery.com/ui/1.13.1/themes/base/jquery-ui.css">




<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<!-- Inclure jQuery -->
<!-- Inclure jQuery UI -->
<link rel="stylesheet" href="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/themes/smoothness/jquery-ui.css">
<script src="https://ajax.googleapis.com/ajax/libs/jqueryui/1.12.1/jquery-ui.min.js"></script>


<!-- Inclure le fichier CSS de DataTables via CDN -->
<link rel="stylesheet" type="text/css" href="https://cdn.jsdelivr.net/npm/datatables.net-bs4/css/dataTables.bootstrap4.min.css">

<!-- Inclure jQuery via CDN (nécessaire pour DataTables) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>

<!-- Inclure le fichier JavaScript de DataTables via CDN -->
<script type="text/javascript" src="https://cdn.jsdelivr.net/npm/datatables.net/js/jquery.dataTables.min.js"></script>



<link rel="stylesheet" href="https://code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
<script src="https://code.jquery.com/ui/1.12.1/jquery-ui.min.js"></script>


<style>
    .popup {
        display: none; /* Le popup est caché par défaut */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        z-index: 9999; /* Assure que le popup apparaît au-dessus de tout le reste */
    }

    .popup-content {
        /* Style du contenu du popup */
    }

    .bg-primary {
        background-color: var(--blue) !important;
    }

    #mainNav .navbar-nav > li.nav-item > a.nav-link.active {
        color: #fff;
        background: var(--blue);
    }

    .btn:disabled, .btn.disabled, fieldset:disabled .btn {
        background-color: var(--blue);
        border-color: var(--blue);
    }

        .btn:disabled, .btn.disabled, fieldset:disabled .btn :hover {
            background-color: var(--blue);
            border-color: var(--blue);
        }

    .nav-link py-3 px-0 px-lg-3 rounded active {
        color: #007bff;
    }


    .popup {
        background-color: #dee2e6c4;
        z-index: 9999;
        display: none;
        width: 70%;
    }

    /* Style pour le contenu du popup */
    .popup-content {
        background-color: #fff; /* Fond blanc */
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Ombre légère */
    }

        /* Style pour le bouton de fermeture */
        .popup-content .close {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            color: #999;
            font-size: 20px;
        }

            /* Style pour le bouton de fermeture au survol */
            .popup-content .close:hover {
                color: #333;
            }

        /* Style pour le titre du popup */
        .popup-content h4 {
            margin-top: 0;
        }

        /* Style pour le bouton Cancel */
        .popup-content .btn-primary {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            cursor: pointer;
        }

            /* Style pour le bouton Cancel au survol */
            .popup-content .btn-primary:hover {
                background-color: #0056b3;
            }

    #Adh {
        --bs-table-color: rgba(255, 255, 255, 0.9);
    }

    .navbar-nav ms-auto:hover {
        color: blue !important;
    }

    .popup-content {
    }

        .popup-content h5 {
            color: #007bffe0;
            margin-top: 20px;
            margin-bottom: 30px;
            text-align: center;
            font-family: math;
        }

    li .nav-item mx-0 mx-lg-1 .nav-link py-3 px-0 px-lg-3 rounded {
        background-color: aliceblue;
    }

    /* Style du tooltip */
    .nav-link[title]:hover::after {
        content: attr(title);
        background-color: black;
        color: white;
        padding: 5px;
        border-radius: 5px;
        position: absolute;
        bottom: -20px; /* positionner le tooltip en bas */
        left: 50%; /* positionner le tooltip au centre */
        transform: translateX(-50%);
        z-index: 1; /* assure que le tooltip est au-dessus de tout autre contenu */
    }

    .popup {
        display: none; /* Le popup est caché par défaut */
        position: fixed;
        top: 50%;
        left: 50%;
        transform: translate(-50%, -50%);
        background-color: white;
        padding: 20px;
        border: 1px solid #ccc;
        border-radius: 5px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1);
        z-index: 9999; /* Assure que le popup apparaît au-dessus de tout le reste */
    }

    .popup-content {
        /* Style du contenu du popup */
    }

    .bg-primary {
        background-color: var(--blue) !important;
    }

    #mainNav .navbar-nav > li.nav-item > a.nav-link.active {
        color: #fff;
        background: var(--blue);
    }

    .btn:disabled, .btn.disabled, fieldset:disabled .btn {
        background-color: var(--blue);
        border-color: var(--blue);
    }

        .btn:disabled, .btn.disabled, fieldset:disabled .btn :hover {
            background-color: var(--blue);
            border-color: var(--blue);
        }

    .nav-link py-3 px-0 px-lg-3 rounded active {
        color: #007bff;
    }


    .popup {
        background-color: #f8f9fa;
        z-index: 9999;
        display: none;
        width: 70%;
    }

    /* Style pour le contenu du popup */
    .popup-content {
        background-color: #fff; /* Fond blanc */
        padding: 20px;
        border-radius: 5px;
        box-shadow: 0 0 10px rgba(0, 0, 0, 0.3); /* Ombre légère */
    }

        /* Style pour le bouton de fermeture */
        .popup-content .close {
            position: absolute;
            top: 10px;
            right: 10px;
            cursor: pointer;
            color: #999;
            font-size: 20px;
        }

            /* Style pour le bouton de fermeture au survol */
            .popup-content .close:hover {
                color: #333;
            }

        /* Style pour le titre du popup */
        .popup-content h4 {
            margin-top: 0;
        }

        /* Style pour le bouton Cancel */
        .popup-content .btn-primary {
            background-color: #007bff;
            color: #fff;
            padding: 10px 20px;
            border: none;
            border-radius: 5px;
            text-decoration: none;
            font-size: 16px;
            cursor: pointer;
        }

            /* Style pour le bouton Cancel au survol */
            .popup-content .btn-primary:hover {
                background-color: #0056b3;
            }

    #Adh {
        --bs-table-color: rgba(255, 255, 255, 0.9);
    }

    .navbar-nav ms-auto:hover {
        color: blue !important;
    }

    .popup-content {
    }

        .popup-content h5 {
            color: #007bffe0;
            margin-top: 20px;
            margin-bottom: 30px;
            text-align: center;
            font-family: math;
        }

    li .nav-item mx-0 mx-lg-1 .nav-link py-3 px-0 px-lg-3 rounded {
        background-color: aliceblue;
    }

    /* Style du tooltip */
    .nav-link[title]:hover::after {
        content: attr(title);
        background-color: black;
        color: white;
        padding: 5px;
        border-radius: 5px;
        position: absolute;
        bottom: -20px; /* positionner le tooltip en bas */
        left: 50%; /* positionner le tooltip au centre */
        transform: translateX(-50%);
        z-index: 1; /* assure que le tooltip est au-dessus de tout autre contenu */
    }

    /* Style du conteneur */
    #exTab1 {
        background-color: #f5f5f5;
        border-radius: 5px;
    }

        /* Style de la liste de navigation */
        #exTab1 .nav-pills {
            margin-bottom: 20px;
        }

            /* Style des éléments de la liste de navigation */
            #exTab1 .nav-pills li {
                display: inline;
            }

                /* Style des liens dans les éléments de la liste de navigation */
                #exTab1 .nav-pills li a {
                    padding: 10px 15px;
                    border: 1px solid #ccc;
                    border-radius: 5px;
                    background-color: #fff;
                    color: #333;
                    text-decoration: none;
                    transition: background-color 0.3s ease;
                }

                /* Style des liens actifs */
                #exTab1 .nav-pills li.active a {
                    background-color: #337ab7;
                    color: #fff;
                    border-color: #337ab7;
                }


    .required::before {
        content: '*';
        color: red;
        margin-right: 5px;
    }




    .btn-primary {
        --bs-btn-color: #fff;
        --bs-btn-bg: var(--bs-link-color);
        --bs-btn-border-color: #1abc9c;
        --bs-btn-hover-color: #fff;
        --bs-btn-hover-bg: var(--bs-btn-hover-border-color);
        --bs-btn-hover-border-color: var(--bs-link-color);
        --bs-btn-focus-shadow-rgb: 60, 198, 171;
        --bs-btn-active-color: #fff;
        --bs-btn-active-bg: var(--swiper-theme-color);
        --bs-btn-active-border-color: var(--bs-btn-hover-border-color);
        --bs-btn-active-shadow: inset 0 3px 5px rgba(0, 0, 0, 0.125);
        --bs-btn-disabled-color: #fff;
        --bs-btn-disabled-bg: var(--bs-btn-active-bg);
        --bs-btn-disabled-border-color: var(--bs-btn-active-bg);
    }

    .disabled-element {
        opacity: 0;
        pointer-events: none;
    }

    .enabled-element {
        opacity: 1;
        pointer-events: auto;
    }
</style>

<script>
    $(function () {
        // Initialisez le Datepicker sur les champs de date
        $("#daterub1").datepicker({
            dateFormat: "yy-mm-dd" // Format de date souhaité
        });

        $("#DE").datepicker({
            dateFormat: "yy-mm-dd" // Format de date souhaité
        });

        $("#DS").datepicker({
            dateFormat: "yy-mm-dd" // Format de date souhaité
        });

        $("#dateRub3").datepicker({
            dateFormat: "yy-mm-dd" // Format de date souhaité
        });
    });
</script>
<div class="modal fade" id="MyModal" style="">
    <div class="modal-dialog modal-dialog-scrollable" id="Modal" style="max-width: 80%;">
        <div class="modal-content">
            <!-- Header -->
            <div class="modal-header">
                <h4 id="ModalTitle"></h4>
                <a href="Dashboard2" class="close" data-dismiss="modal" style="margin-top: -30;">&times;</a>
            </div>

            <!-- Body -->
            <div class="modal-body">
                <form id="form" class="adherent-info" enctype="multipart/form-data" action="/BulletinSoin/UploadPhoto" method="post">
                    <fieldset id="SubmitForm">
                        <!-- Form fields -->
                        <!-- Ajout d'un champ caché pour stocker l'ID du bulletin de soin -->
                        <div class="form-group">
                            <input type="hidden" id="buId" name="idBs" />
                        </div>
                        <div id="exTab1" class="container">
                            <ul class="nav nav-pills">
                                <li class="active  mb-3">
                                    <a href="#1a" data-toggle="tab">Adhérent</a>
                                </li>
                                <li class="mb-3">
                                    <a href="#2a" data-toggle="tab">Medecins & Praticiens</a>
                                </li>
                                <li class="mb-3">
                                    <a href="#3a" data-toggle="tab">Etablissement hospitalier</a>
                                </li>
                                <li class="mb-3">
                                    <a href="#4a" data-toggle="tab">Soins & prothèses dentaires</a>
                                </li>
                                <li class="mb-3" id="myElement">
                                    <a href="#5a" data-toggle="tab">Importer BS</a>
                                </li>
                            </ul>

                            <div class="tab-content clearfix">
                                <div class="tab-pane active" id="1a">
                                    <div class="input-group">

                                        <div class="form-group">
                                            <label for="num" class="required" required="">Numéro BS:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.numBs, new { @id = "num", @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label for="adhId" class="required" required="">Id Adhérent:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.idAdherent, new { @id = "adhId", @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="input-group">

                                        <div class="form-group">
                                            <label for="nomAdh" class="required" required="">Nom Adhérent:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.nomAdh, new { @id = "nomAdh", @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label for="pnomAdh" class="required" required="">Prénom Adhérent:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.prenomAdh, new { @id = "pnomAdh", @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label for="DropDwn" class="required" required="">Prestataire:</label>
                                            @Html.DropDownListFor(m => m.bulletinSoin.idPrestataire, ViewBag.ListOfPrestataire as SelectList, new { @id = "DropDwn", @class = "form-control" })

                                        </div>
                                    </div>
                                    <div class="input-group">

                                        <div class="form-group">
                                            <label for="matCnam">Matricule CNAM:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.matriculeCnam, new { @id = "matCnam", @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label for="cin_pass">CIN/PASS:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.CIN_PASS, new { @id = "cin_pass", @class = "form-control" })
                                        </div>
                                        <div class="form-group">
                                            <label for="adressA">Adresse Adhérent:</label>
                                            @Html.TextBoxFor(m => m.bulletinSoin.adressAdh, new { @id = "adressA", @class = "form-control" })
                                        </div>
                                    </div>
                                    <div class="form-group">
                                        <small>[00 ]: Adhérent - [99] :conjoint - [01] : Enfant 1er - [02]: 2e -[03] : 3e ... etc</small>

                                        <!-- Indication des champs obligatoires -->
                                        <p style="color: red; margin-top: 10px;">[ * ] : Champs obligatoires à remplir ! </p>


                                    </div>


                                </div>
                                <div class="tab-pane" id="2a">
                                    <div class="rubrique-info">
                                        <!-- Ajout de la ligne "Rubrique Medecins & Pharmacie" -->
                                        <div style="text-align: center; color: #2572e2; margin-bottom: 20px "><b>Réservé aux Medecins & Praticiens - خاص بالاطباءو الممارسين </b></div>

                                        <div class="input-group">

                                            <div class="form-group">

                                                <label for="daterub1">date:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique1.dateRub1, new { @id = "daterub1", @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label for="idSousFa">Désignation:</label>
                                                @Html.DropDownListFor(m => m.bulletinSoin.Rubrique1.idSousFamille, ViewBag.ListOfPrestation as SelectList, new { @id = "idSousFa", @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label for="matfiscal1">Matricule Fiscal:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique1.matriculeFisacalRub1, new { @id = "matfiscal1", @class = "form-control" })
                                            </div>
                                        </div>
                                        <div class="input-group">
                                            <div class="form-group">
                                                <label for="honorub1">Honoraires:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique1.honorairesRub1, new { @id = "honorub1", @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label for="deviserub1">Devise:</label>
                                                @Html.DropDownListFor(m => m.bulletinSoin.Rubrique1.deviseRub1, new SelectList(new[] { "TND", "EUR", "GBP", "CHF", "SAR", "CAD", "LYD", "EGP", "LBP", "MAD", "MRU", "DZD", "TRY", "GNF", "XOF" }), new { @id = "deviserub1", @class = "form-control" })
                                            </div>
                                            <div class="form-group">
                                                <label for="montantchan">  Montant Après Conversion:</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique1.montant_change, new { @id = "montantchan", @class = "form-control" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" style="background-color: #dcd6d6;">TND</span>
                                                    </div>
                                                </div>
                                            </div>

                                            <div class="form-group" style="width:200px;">
                                                <label for="montantEstimé">Montant Estimé :</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique1.montant_estimé, new { @id = "montantEstimé", @class = "form-control" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text" style="background-color: #dcd6d6;">TND</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                        <div id="messageMax" style="color: red; text-align: right;"></div>

                                        <div class="form-group" style="display: flex; justify-content: space-between;margin-top:5%">
                                            <p style="text-align: left; width: 50%;">En cas de chirurgie ou de traitements spéciaux, il faut joindre au bulletin de soins la nature de l'acte pratiqué sous pli confidentiel.</p>
                                            <p style="text-align: right; width: 35%;">في حالات الجراحة او العلاج الخاص يجب مصاحبة بنوع العمل المنجز في ظرف سري</p>
                                        </div>


                                        <div class="form-group" style="margin-top:10%;">
                                            <a href="#" class="btn btn-primary" id="AddOtherEdit" onclick="addRubriqueEditToTable()">Ajouter</a>
                                        </div>


                                        <!-- Bouton pour ajouter une autre itération de la rubrique -->
                                        <div class="form-group">
                                            <a href="#" class="btn btn-primary" id="AddOther" onclick="addOtherRubrique()">Ajouter Autre</a>
                                        </div>
                                        <!--    tableau-->

                                        <div id="tableContainer" style="display: none; margin-top:20px;overflow:scroll;">
                                            <table id="rubriquesTable" class="table table-striped table-bordered" style="width: 100%; text-align: center; border:1px solid #333;">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th style="padding: 10px;">Désignation</th>
                                                        <th style="padding: 10px;">Date</th>
                                                        <th style="padding: 10px;">Honoraires</th>
                                                        <th style="padding: 10px;">Devise</th>
                                                        <th style="padding: 10px;">Montant Converti</th>
                                                        <th style="padding: 10px;">Montant Estimé</th>

                                                        <th style="padding: 10px;">Matricule Fiscal</th>
                                                        <th style="padding: 10px;">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="rubriquesBody">
                                                    <!-- Les données de chaque rubrique seront ajoutées ici par JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>

                                        <div id="tableContainerEdit" style="display: none; margin-top:20px;overflow:scroll;">
                                            <table id="rubriquesTableEdit" class="table table-striped table-bordered" style="width: 100%; text-align: center; border:1px solid #333;">
                                                <thead class="thead-dark">
                                                    <tr>
                                                        <th style="padding: 10px;">Désignation</th>
                                                        <th style="padding: 10px;">Date </th>
                                                        <th style="padding: 10px;">Honoraires</th>
                                                        <th style="padding: 10px;">Devise</th>
                                                        <th style="padding: 10px;">Montant Converti</th>
                                                        <th style="padding: 10px;">Montant Estimé</th>

                                                        <th style="padding: 10px;">Matricule Fiscal</th>
                                                        <th style="padding: 10px;">Action</th>
                                                    </tr>
                                                </thead>
                                                <tbody id="rubriquesBodyEdit">
                                                    <!-- Les données de chaque rubrique seront ajoutées ici par JavaScript -->
                                                </tbody>
                                            </table>
                                        </div>


                                    </div>



                                </div>
                                <div class="tab-pane" id="3a">
                                    <div class="rubrique-info">
                                        <div style="text-align: center; color: #2572e2; margin-bottom: 20px "><b>  Réservé à l'établissement hospitalier - خاص بالمؤسسة الاستشفائية </b></div>
                                        <div class="input-group">

                                            <div class="form-group">

                                                <label for="DE">Date d'Entrée:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.DE, new { @id = "DE", @class = "form-control" })
                                            </div>
                                            <div class="form-group">

                                                <label for="DS">Date de Sortie:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.DS, new { @id = "DS", @class = "form-control" })
                                            </div>
                                            <div class="form-group">

                                                <label for="matriculeFiscalRub2">Matricule Fiscal :</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.matriculeFiscalRub2, new { @id = "matriculeFiscalRub2", @class = "form-control" })
                                            </div>
                                        </div>

                                        <div class="input-group">
                                            <div class="form-group">

                                                <label for="montantFrais">Montant Frais:</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.montantFrais, new { @id = "montantFrais", @class = "form-control" })
                                            </div>

                                            <div class="form-group">

                                                <label for="deviseRub2">Devise :</label>
                                                @Html.DropDownListFor(m => m.bulletinSoin.Rubrique2.deviseRub2, new SelectList(new[] { "TND", "EUR", "GBP", "CHF", "SAR", "CAD", "LYD", "EGP", "LBP", "MAD", "MRU", "DZD", "TRY", "GNF", "XOF" }), new { @id = "deviseRub2", @class = "form-control" })

                                            </div>
                                            <div class="form-group">
                                                <label for="montantchan">Montant après conversion:</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.montant_change2, new { @id = "montantchan2", @class = "form-control" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text">TND</span>
                                                    </div>
                                                </div>
                                            </div>
                                            <div class="form-group">
                                                <label for="montantchan">Montant Estimé:</label>
                                                <div class="input-group">
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique2.montant_estimé2, new { @id = "montantEstimé2", @class = "form-control" })
                                                    <div class="input-group-append">
                                                        <span class="input-group-text">TND</span>
                                                    </div>
                                                </div>
                                            </div>
                                        </div>

                                        <div class="form-group" style="margin-top:10%;">
                                            <a href="#" class="btn btn-primary" id="AddOtherEdit2" onclick="addRubrique2EditToTable()">Ajouter</a>
                                        </div>
                                    </div>
                                    <div id="tableContainerEdit2" style="display:none; margin-top: 20px; overflow: scroll;">
                                        <table id="rubriquesTableEdit2" class="table table-striped table-bordered" style="width: 100%; text-align: center; border:1px solid #333;">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th style="padding: 10px;">Date Entrée</th>
                                                    <th style="padding: 10px;">Date Sortie</th>
                                                    <th style="padding: 10px;">Montant Frais</th>
                                                    <th style="padding: 10px;">Devise</th>
                                                    <th style="padding: 10px;">Montant Converti</th>
                                                    <th style="padding: 10px;">Matricule Fiscal</th>
                                                    <th style="padding: 10px;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="rubriquesBodyEdit2">
                                                <!-- Les données de chaque rubrique seront ajoutées ici par JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>

                                </div>
                                <div class="tab-pane" id="4a">
                                    <div class="rubrique-info">
                                        <div class="form-group">

                                            <div style="text-align: center; color: #2572e2; margin-bottom: 20px "><b>Soins Et prothèses dentaires - علاج و تركيب الاسنان <b></b></b></div>
                                            <div class="input-group">

                                                <div class="form-group">
                                                    <label for="dateRub3">Date :</label>
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.dateRub3, new { @id = "dateRub3", @class = "form-control" })
                                                </div>

                                                <div class="form-group">
                                                    <label for="dents">Dents:</label>
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.dents, new { @id = "dents", @class = "form-control" })
                                                </div>

                                                <div class="form-group">
                                                    <label for="actMedical">Act Medical:</label>
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.actMedical, new { @id = "actMedical", @class = "form-control" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="type">Type:</label>
                                                    @Html.DropDownListFor(m => m.bulletinSoin.Rubrique3.type, new SelectList(new[] { "Soin Dentaire", "Prothèse Dentaire" }), new { @id = "dev", @class = "form-control" })
                                                </div>
                                            </div>
                                            <div class="input-group">

                                                <div class="form-group">
                                                    <label for="honorairesRub3">Honoraires :</label>
                                                    @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.honorairesRub3, new { @id = "honorairesRub3", @class = "form-control" })
                                                </div>

                                                <div class="form-group">
                                                    <label for="deviseRub3">Devise :</label>
                                                    @Html.DropDownListFor(m => m.bulletinSoin.Rubrique3.deviseRub3, new SelectList(new[] { "TND", "EUR", "GBP", "CHF", "SAR", "CAD", "LYD", "EGP", "LBP", "MAD", "MRU", "DZD", "TRY", "GNF", "XOF" }), new { @id = "deviseRub3", @class = "form-control" })
                                                </div>
                                                <div class="form-group">
                                                    <label for="montantchan">Montant après conversion:</label>
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.montant_change3, new { @id = "montantchan3", @class = "form-control" })
                                                        <div class="input-group-append">
                                                            <span class="input-group-text">TND</span>
                                                        </div>
                                                    </div>
                                                </div>
                                                <div class="form-group">
                                                    <label for="montantchan">Montant Estimé:</label>
                                                    <div class="input-group">
                                                        @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.montant_estimé3, new { @id = "montantEstimé3", @class = "form-control" })
                                                        <div class="input-group-append">
                                                            <span class="input-group-text">TND</span>
                                                        </div>
                                                    </div>
                                                </div>

                                            </div>
                                            <div class="form-group">
                                                <label for="matriculeFiscalRub3">Matricule Fiscal :</label>
                                                @Html.TextBoxFor(m => m.bulletinSoin.Rubrique3.matriculeFiscalRub3, new { @id = "matriculeFiscalRub3", @class = "form-control" })
                                            </div>



                                        </div>
                                        <div class="form-group" style="margin-top:10%;">
                                            <a href="#" class="btn btn-primary" id="AddOtherEdit3" onclick="addRubrique3EditToTable()">Ajouter</a>
                                        </div>

                                    </div>

                                    <div class="form-group">
                                        <a href="#" class="btn btn-primary" id="AddOther3" onclick="addOtherRubrique3()">Ajouter Autre</a>
                                    </div>
                                    <div id="tableContainer3" style="display: none; margin-top:20px;overflow:scroll;">
                                        <table id="rubriquesTable3" class="table table-striped table-bordered" style="width: 100%; text-align: center; border:1px solid #333;">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th style="padding: 10px;">Date</th>
                                                    <th style="padding: 10px;">Dents</th>
                                                    <th style="padding: 10px;">Act Medical</th>
                                                    <th style="padding: 10px;">Honoraires</th>
                                                    <th style="padding: 10px;">Devise</th>
                                                    <th style="padding: 10px;">Montant converti</th>

                                                    <th style="padding: 10px;">Matricule Fiscal</th>
                                                    <th style="padding: 10px;">Type</th>
                                                    <th style="padding: 10px;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="rubriquesBody3">
                                                <!-- Les données de chaque rubrique seront ajoutées ici par JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                    <div id="tableContainerEdit3" style="display: none; margin-top: 20px; overflow: scroll;">
                                        <table id="rubriquesTableEdit3" class="table table-striped table-bordered" style="width: 100%; text-align: center; border:1px solid #333;">
                                            <thead class="thead-dark">
                                                <tr>
                                                    <th style="padding: 10px;">Date</th>
                                                    <th style="padding: 10px;">Dents</th>
                                                    <th style="padding: 10px;">Act Medical</th>
                                                    <th style="padding: 10px;">Honoraires</th>
                                                    <th style="padding: 10px;">Devise</th>
                                                    <th style="padding: 10px;">Montant converti</th>

                                                    <th style="padding: 10px;">Matricule Fiscal</th>
                                                    <th style="padding: 10px;">Type</th>
                                                    <th style="padding: 10px;">Action</th>
                                                </tr>
                                            </thead>
                                            <tbody id="rubriquesBodyEdit3">
                                                <!-- Les données de chaque rubrique seront ajoutées ici par JavaScript -->
                                            </tbody>
                                        </table>
                                    </div>
                                </div>
                                <div class="tab-pane" id="5a">
                                    <div class="form-group">
                                        <label for="photoUpload">Upload Photo:</label>
                                        <input type="file" id="photoUpload" accept="image/*" onchange="handleFileUpload(event)" class="form-control-file">
                                    </div>

                                    <input type="hidden" id="photoPath" name="photoPath" />
                                    <!-- Image pour afficher la photo -->
                                    <img id="bsPhoto" src="" alt="Uploaded photo" style="max-width: 100%; height: auto;">
                                    <div id="bsPhotoname"></div>
                                    <div class="form-group row" style="margin-top: 10%;">
                                        <label for="path" class="col-sm-3 col-form-label">Nom Photo:</label>
                                        <div class="col-sm-9" style=" background-color: rgba(255, 255, 255, 0);">
                                            @Html.TextBoxFor(m => m.bulletinSoin.path, new { @id = "path", @class = "form-control" })
                                        </div>

                                    </div>


                                </div>


                            </div>

                    </fieldset>
                </form>
            </div>

            <!-- Footer -->
            <div class="modal-footer">
                <div class="form-group">
                    <a href="Dashboard2" class="btn btn-danger" data-dismiss="modal">Fermer</a>
                    <a href="#" class="btn btn-success" id="SaveBSRecord">Enregistrer</a>
                    <a href="#" class="btn btn-success" id="SaveAll">Enregistrer</a>

                    <!-- Vous pouvez ajouter d'autres boutons d'action ici -->
                </div>
            </div>
        </div>
    </div>
</div>

<script>
function handleFileUpload(event) {
    var file = event.target.files[0];

    var formData = new FormData();
    formData.append("file", file);

    // Récupérer la valeur du champ "num" contenant le numéro de bulletin de soin
    var numBs = $("#num").val();

    // Ajouter le numéro de bulletin de soin aux données du formulaire
    formData.append("numBs", numBs);

    $.ajax({
        url: '@Url.Action("UploadPhoto", "Account")', // Assurez-vous de remplacer "ControllerName" par le nom réel de votre contrôleur
        type: 'POST',
        data: formData,
        processData: false,
        contentType: false,
        success: function (response) {
            // Mettre à jour la valeur de l'élément input caché avec le chemin de fichier retourné
            $("#photoPath").val(response.filePath);

            // Extraire uniquement le chemin relatif de l'image
            var imagePath = response.filePath.substring(response.filePath.lastIndexOf("\\images\\"));

            // Définir l'attribut src de l'élément img sur le chemin relatif de l'image
            $("#bsPhoto").attr("src", imagePath);


            alert("Image uploaded successfully!" + filePath);
        },
        error: function (error) {
            // Gérer les erreurs, si nécessaire
            alert("Error uploading image: ", error);
        }
    });



}


</script>


<!----------------------------------------------------------------------------------------------->
<!--SCript pour l'ajout'-->

<script>
    function AddNewBSenAttente() {
        $("#form")[0].reset();
        $("#ModalTitle").html("Ajouter nouveau BS");
        $("#MyModal").modal("show");
        $("#editOther").hide();
        $("#details").hide();
        $("#editOther3").hide();
        $("#details3").hide();
        $("#path").hide();


        $("#AddOtherEdit").hide();
        $("#SaveAll").hide()
        $("#AddOtherEdit3").hide();
        $("#AddOtherEdit2").hide();
        // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
        $("#adhId").val("@Model.Adherent.idAdherent");
        $("#nomAdh").val("@Model.Adherent.nomAdh");
        $("#pnomAdh").val("@Model.Adherent.prenomAdh");
        $("#matCnam").val("@Model.Adherent.matriculeCnam");
        $("#cin_pass").val("@Model.Adherent.CIN_PASS");
        $("#adressA").val("@Model.Adherent.adressAdh");



        $("#DropDwn").val("");
        $("#idSousFa").val("");
        $("#honorub1").val("");
        $("#montantchan").val("");
        $("#matfiscal1").val("");
        $(document).ready(function () {
            // Obtenir la date actuelle
            var currentDate = new Date();

            // Formater la date au format YYYY-MM-DD pour le champ de date
            var formattedDate = currentDate.toISOString().split('T')[0];

            // Définir la date formatée comme valeur du champ de date
            $("#daterub1").val(formattedDate);
        });
        // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
        $(document).ready(function () {
            // Obtenir la date actuelle
            var currentDate = new Date();

            // Formater la date au format YYYY-MM-DD pour le champ de date
            var formattedDate = currentDate.toISOString().split('T')[0];

            // Définir la date formatée comme valeur du champ de date
            $("#DE").val(formattedDate);
        });
        $(document).ready(function () {
            // Obtenir la date actuelle
            var currentDate = new Date();

            // Formater la date au format YYYY-MM-DD pour le champ de date
            var formattedDate = currentDate.toISOString().split('T')[0];

            // Définir la date formatée comme valeur du champ de date
            $("#DS").val(formattedDate);
        });
        $("#montantFrais").val("");
        $("#montantchan2").val("");
        $("#matriculeFiscalRub2").val("");
        // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
        $(document).ready(function () {
            // Obtenir la date actuelle
            var currentDate = new Date();

            // Formater la date au format YYYY-MM-DD pour le champ de date
            var formattedDate = currentDate.toISOString().split('T')[0];

            // Définir la date formatée comme valeur du champ de date
            $("#dateRub3").val(formattedDate);
        });
        $("#dents").val("");
        $("#actMedical").val("");
        $("#honorairesRub3").val("");
        $("#montantchan3").val("");

        $("#matriculeFiscalRub3").val("");
        $("#dev").val("");


    }
    // ------------------------------------------------------------------------------------------------------- AJOUTER RUBs --------------

    // Variable pour stocker les rubriques
    var rubriquesData = [];
    // Fonction pour ajouter une nouvelle itération de la rubrique 1 dans le formulaire
    function addOtherRubrique() {
        if ($("#daterub1").val() && $("#idSousFa").val() && $("#honorub1").val() && $("#deviserub1").val() && $("#matfiscal1").val()) {

            // Collecter les données de la rubrique actuelle
            var rubrique = {
                idBs: $("#buId").val(), // Ajout de l'idBs ici
                dateRub1: $("#daterub1").val(),
                idSousFamille: $("#idSousFa").val(),
                honorairesRub1: $("#honorub1").val(),
                deviseRub1: $("#deviserub1").val(),
                montant_change: $("#montantchan").val(),
                montant_estimé: $("#montantEstimé").val(),

                matriculeFisacalRub1: $("#matfiscal1").val(),

            };


            // Ajouter les données de la rubrique actuelle dans la variable
            rubriquesData.push(rubrique);

            // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
            $(document).ready(function () {
                // Obtenir la date actuelle
                var currentDate = new Date();

                // Formater la date au format YYYY-MM-DD pour le champ de date
                var formattedDate = currentDate.toISOString().split('T')[0];

                // Définir la date formatée comme valeur du champ de date
                $("#daterub1").val(formattedDate);
            });
            $("#idSousFa").val("");
            $("#honorub1").val("");
            $("#montantchan").val("");
            $("#matfiscal1").val("");

            // Afficher le message "Ligne sauvegardée"
            alert("Ligne de Rub1 sauvegardée");

            displayRubriquesData();

        }
    }
    function displayRubriquesData() {
        var tbody = $("#rubriquesBody");
        tbody.empty();

        rubriquesData.forEach(function (rubrique) {
            var row = $("<tr>");

            // Ajouter les valeurs de désignation à la ligne du tableau
            var designationText = $("#idSousFa option[value='" + rubrique.idSousFamille + "']").text();
            var designationCell = $("<td>").text(designationText);
            designationCell.css({
                "padding": "8px",
                "border": "1px solid #333"
            });
            row.append(designationCell);

            // Parcourir les autres clés de rubrique
            Object.keys(rubrique).slice(1).forEach(function (key) {
                if (key !== "idSousFamille") { // Ne pas inclure la désignation dans les autres cellules
                    var cell = $("<td>").text(rubrique[key]);
                    cell.css({
                        "padding": "8px",
                        "border": "1px solid #333",
                    });
                    row.append(cell);
                }
            });

            // Ajouter une colonne pour la suppression avec une icône de corbeille

            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"

            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne
            deleteIcon.click(function () {
                row.remove(); // Supprimer la ligne du tableau
                // Supprimer la ligne correspondante de rubriquesData (si nécessaire)
                var index = rubriquesData.indexOf(rubrique);
                if (index !== -1) {
                    rubriquesData.splice(index, 1);
                }
                alert("ligne supprimé");

            });

            tbody.append(row);
        });

        // Afficher le tableau pendant un court laps de temps
        $("#tableContainer").show();
    }
    // Variable pour stocker les rubriques 2
    var rubriquesData2 = [];
    // Fonction pour ajouter une nouvelle itération de la rubrique 2 dans le formulaire
    function addOtherRubrique2() {
        if ($("#DE").val() && $("#DS").val() && $("#montantFrais").val() && $("#deviseRub2").val() && $("#matriculeFiscalRub2").val()) {

            // Collecter les données de la rubrique actuelle
            var rubrique2 = {
                idBs: $("#buId").val(), // Ajout de l'idBs ici
                DE: $("#DE").val(),
                DS: $("#DS").val(),
                montantFrais: $("#montantFrais").val(),
                deviseRub2: $("#deviseRub2").val(),
                montant_change2: $("#montantchan2").val(),
                matriculeFiscalRub2: $("#matriculeFiscalRub2").val()
            };

            // Ajouter les données de la rubrique actuelle dans la variable
            rubriquesData2.push(rubrique2);

            // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
            $(document).ready(function () {
                // Obtenir la date actuelle
                var currentDate = new Date();

                // Formater la date au format YYYY-MM-DD pour le champ de date
                var formattedDate = currentDate.toISOString().split('T')[0];

                // Définir la date formatée comme valeur du champ de date
                $("#DE").val(formattedDate);
            });
            $(document).ready(function () {
                // Obtenir la date actuelle
                var currentDate = new Date();

                // Formater la date au format YYYY-MM-DD pour le champ de date
                var formattedDate = currentDate.toISOString().split('T')[0];

                // Définir la date formatée comme valeur du champ de date
                $("#DS").val(formattedDate);
            });
            $("#montantchan2").val("");
            $("#matriculeFiscalRub2").val("");

            // Afficher le message "Ligne sauvegardée"
        }

    }
    // Variable pour stocker les rubriques 3
    var rubriquesData3 = [];
    // Fonction pour ajouter une nouvelle itération de la rubrique 3 dans le formulaire
    function addOtherRubrique3() {
        if ($("#dateRub3").val() && $("#dents").val() && $("#actMedical").val() && $("#honorairesRub3").val() && $("#deviseRub3").val() && $("#matriculeFiscalRub3").val() && $("#dev").val()) {

            // Collecter les données de la rubrique actuelle
            var rubrique3 = {
                idBs: $("#buId").val(), // Ajout de l'idBs ici
                dateRub3: $("#dateRub3").val(),
                dents: $("#dents").val(),
                actMedical: $("#actMedical").val(),
                honorairesRub3: $("#honorairesRub3").val(),
                deviseRub3: $("#deviseRub3").val(),
                montant_change3: $("#montantchan3").val(),

                matriculeFiscalRub3: $("#matriculeFiscalRub3").val(),
                type: $("#dev").val()
            };

            // Ajouter les données de la rubrique actuelle dans la variable
            rubriquesData3.push(rubrique3);

            // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
            $(document).ready(function () {
                // Obtenir la date actuelle
                var currentDate = new Date();

                // Formater la date au format YYYY-MM-DD pour le champ de date
                var formattedDate = currentDate.toISOString().split('T')[0];

                // Définir la date formatée comme valeur du champ de date
                $("#dateRub3").val(formattedDate);
            });
            $("#dents").val("");
            $("#actMedical").val("");
            $("#honorairesRub3").val("");
            $("#montantchan3").val("");

            $("#matriculeFiscalRub3").val("");
            $("#dev").val("");

            alert("Ligne de rub 3 sauvegardée");
            displayRubriquesData3();
        }
    }
    function displayRubriquesData3() {
        var tbody = $("#rubriquesBody3");
        tbody.empty();

        rubriquesData3.forEach(function (rubrique3) {
            var row = $("<tr>");

            // Parcourir les clés de rubrique 3 en ignorant la première clé correspondant à #buId
            Object.keys(rubrique3).slice(1).forEach(function (key) {
                var cell = $("<td>").text(rubrique3[key]);
                cell.css({
                    "padding": "8px",
                    "border": "1px solid #333",
                });
                row.append(cell);
            });

            // Ajouter une colonne pour la suppression avec une icône de corbeille
            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"

            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne
            deleteIcon.click(function () {
                row.remove(); // Supprimer la ligne du tableau
                // Supprimer la ligne correspondante de rubriquesData (si nécessaire)
                var index = rubriquesData3.indexOf(rubrique3);
                if (index !== -1) {
                    rubriquesData3.splice(index, 1);
                }
                alert("ligne supprimé");
            });

            tbody.append(row);
        });

        // Afficher le tableau pendant un court laps de temps
        $("#tableContainer3").show();
    }

    $("#SaveBSRecord").click(function () {
        addOtherRubrique();
        addOtherRubrique2();
        addOtherRubrique3();

        var dataToSend = {
            idBs: $("#buId").val(),
            numBs: $("#num").val(),
            path: $("#photoPath").val(), // Assurez-vous que #photoPath contient le chemin de la photo
            idAdherent: $("#adhId").val(),
            nomAdh: $("#nomAdh").val(),
            prenomAdh: $("#pnomAdh").val(),
            matriculeCnam: $("#matCnam").val(),
            CIN_PASS: $("#cin_pass").val(),
            adressAdh: $("#adressA").val(),
            idPrestataire: $("#DropDwn").val(),

        };
        // Vérifier si des rubriques 1 ont été ajoutées
        if (rubriquesData.length > 0) {
            dataToSend.Rubriques = rubriquesData;
        }

        // Vérifier si des rubriques 2 ont été ajoutées
        if (rubriquesData2.length > 0) {
            dataToSend.Rubriques2 = rubriquesData2;
        }

        // Vérifier si des rubriques 3 ont été ajoutées
        if (rubriquesData3.length > 0) {
            dataToSend.Rubriques3 = rubriquesData3;
        }
        // Reste du code...

        $.ajax({
            type: "POST",
            url: "/Account/SaveDataInDatabase",
            data: dataToSend, // Inclure le chemin de la photo dans les données à envoyer
            success: function (response) {
                if (response.success) {
                    alert("Success!");
                    window.location.href = "/Account/Dashboard2";
                    $("#MyModal").modal("hide");
                } else {
                    alert("Erreur lors de l'enregistrement des données.");
                }
            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de l'envoi des données au serveur.");
            }
        });
    });


</script>

<!--Script pour l'edition-->
<script>

    // Fonction pour récupérer et remplir les données d'un enregistrement BS pour la modification
    function EditbsRecord(idBs) {
        var url = "/Account/GetbsById?idBs=" + idBs;
        $("#ModalTitle").html("Modifier BS ");
        $("#MyModal").modal("show");
        $("#AddOther").hide();
        $("#details").hide();
        $("#AddOther3").hide();
        $("#details3").hide();
        $("#SaveBSRecord").hide()
        enableElement();
        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {

                // Remplir les champs du formulaire avec les données récupérées
                $("#buId").val(data.idBs).prop('disabled', true);
                $("#num").val(data.numBs).prop('disabled', true);

                $("#adhId").val(data.idAdherent).prop('disabled', true);
                $("#nomAdh").val(data.nomAdh).prop('disabled', true);
                $("#pnomAdh").val(data.prenomAdh).prop('disabled', true);
                $("#matCnam").val(data.matriculeCnam).prop('disabled', true);
                $("#cin_pass").val(data.CIN_PASS).prop('disabled', true);
                $("#adressA").val(data.adressAdh).prop('disabled', true);
                $("#DropDwn").val(data.idPrestataire);

                // Appel de la fonction getRubriquesByIdBs avec l'identifiant de bulletin de soin
                getRubriquesByIdBs(data.idBs);

                $("#daterub1").val("");
                $("#idSousFa").val("");
                $("#honorub1").val("");
                $("#montantchan").val("");

                $("#matfiscal1").val("");

                getRubriques2ByIdBs(data.idBs);


                $("#DE").val("");
                $("#DS").val("");
                $("#montantFrais").val("");
                $("#montantchan2").val("");

                $("#matriculeFiscalRub2").val("");


                getRubriques3ByIdBs(data.idBs);


                $("#dateRub3").val("");
                $("#dents").val("");
                $("#actMedical").val("");
                $("#honorairesRub3").val("");
                $("#montantchan3").val("");

                $("#matriculeFiscalRub3").val("");
                $("#dev").val("");

                getPhoto(data)



            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des données.");
            }
        });
    }

    function getPhoto(data) {

        // Extraire uniquement le chemin relatif de l'image
        var imagePath = data.path.substring(data.path.lastIndexOf("\\images\\"));

        // Afficher le chemin relatif de l'image dans la console pour le débogage
        console.log("Chemin relatif de l'image :", imagePath);

        // Définir l'attribut src de l'élément img sur le chemin relatif de l'image
        $("#bsPhoto").attr("src", imagePath);

        // Afficher le chemin de l'image dans la console pour le débogage
        console.log("Chemin de l'image :", data.path);

        // Extraire uniquement le nom de fichier de l'image
        var fileName = imagePath.substring(imagePath.lastIndexOf("\\") + 1);

        $("#path").val(fileName).prop('disabled', true);




    }


    ///------------------------------------------------------------------------------Edit RUB1---------------------------


    // Fonction pour récupérer les rubriques par idBs
    // Fonction pour récupérer les rubriques par idBs
    function getRubriquesByIdBs() {
        var idBs = $("#buId").val();

        $.ajax({
            type: "GET",
            url: "/Home/GetRubriquesByIdBs",
            data: { idBs: idBs },
            success: function (response) {
                if (response && response.length > 0) {
                    response.forEach(function (rubrique) {
                        if (rubrique.date) {
                            rubrique.date = formatDate(rubrique.date);
                        }
                    });
                    displayRubriquesEdit(response);
                }
            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }

    function formatDate(dateString) {
        var date = new Date(dateString);
        var day = String(date.getDate()).padStart(2, '0');
        var month = String(date.getMonth() + 1).padStart(2, '0');
        var year = date.getFullYear();
        return day + '/' + month + '/' + year;
    }

    // Fonction pour afficher les rubriques dans le tableau d'édition
    function displayRubriquesEdit(rubriques) {
        var tbody = $("#rubriquesBodyEdit");
        tbody.empty();

        rubriques.forEach(function (rubrique) {
            var row = $("<tr>");

            // Ajouter l'ID Rub1 (caché)
            var idRub1Cell = $("<td>").text(rubrique.idRub1);
            idRub1Cell.css("display", "none"); // Cacher la colonne
            row.append(idRub1Cell);

            // Ajouter les valeurs de désignation à la ligne du tableau
            var designationCell = $("<td>").text(rubrique.codeNom + " - " + rubrique.nomSousFamille);
            designationCell.css({
                "padding": "10px",
                "border": "1px solid #333"
            });
            row.append(designationCell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique.dateRub1.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDateRub1 = formatDate(date);

            // Ajouter la cellule contenant le champ de date
            var dateCell = $("<td>").text(formattedDateRub1);
            row.append(dateCell);

            // Ajouter les autres cellules
            var honorairesCell = $("<td>").text(rubrique.honorairesRub1);
            var deviseCell = $("<td>").text(rubrique.deviseRub1);
            var montantConvertiCell = $("<td>").text(rubrique.montant_change);
            var montantEstiméCell = $("<td>").text(rubrique.montant_estimé);
            var matriculeCell = $("<td>").text(rubrique.matriculeFisacalRub1);

            [honorairesCell, deviseCell, montantConvertiCell, montantEstiméCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            // Ajouter une colonne pour la suppression avec une icône de corbeille
            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne et la rubrique de la base de données
            deleteIcon.click(function () {
                var idRubrique = $(this).closest("tr").find("td:first").text(); // Lire l'ID Rub1 depuis la première colonne cachée
                deleteRubriqueFromDatabase(idRubrique); // Supprimer la rubrique de la base de données
                row.remove(); // Supprimer la ligne du tableau
            });

            tbody.append(row);
        });

        // Afficher le tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit").show();
    }


    var rubriquesDataEdit = []; // Variable pour stocker toutes les rubriques ajoutées

    // Variable pour stocker les rubriques à envoyer au serveur
    var rubriquesDataToSend = [];

    // Fonction pour ajouter une nouvelle rubrique à partir d'un objet rubriqueEdit
    function addRubriqueEditToTable(rubriqueEdit) {
        if ($("#daterub1").val() && $("#idSousFa").val() && $("#honorub1").val() && $("#deviserub1").val() && $("#matfiscal1").val()) {
            // Collecter les données de la rubrique actuelle
            var rubriqueEdit = {
                idBs: $("#buId").val(), // Ajout de l'idBs ici
                dateRub1: $("#daterub1").val(),
                idSousFamille: $("#idSousFa").val(),
                honorairesRub1: $("#honorub1").val(),
                deviseRub1: $("#deviserub1").val(),
                montant_change: $("#montantchan").val(),
                montant_estimé: $("#montantEstimé").val(),

                matriculeFisacalRub1: $("#matfiscal1").val()
            };

            // Ajouter les données de la rubrique actuelle dans la variable rubriquesDataEdit
            rubriquesDataEdit.push(rubriqueEdit);

            // Ajouter les données de la rubrique actuelle dans la variable rubriquesDataToSend pour l'envoi au serveur
            rubriquesDataToSend.push(rubriqueEdit);

            // Réinitialiser les champs de la rubrique actuelle pour permettre une nouvelle saisie
            $("#daterub1").val("");
            $("#idSousFa").val("");
            $("#honorub1").val("");
            $("#montantchan").val("");
            $("#montantEstimé").val("");

            $("#matfiscal1").val("");

            // Afficher les rubriques dans le tableau
            displayRubriquesEditTable();
        }

        // Stocker les rubriquesDataEdit dans le stockage local après modification
        storeRubriquesDataEditLocally();
    }
    // Fonction pour afficher les rubriques dans le tableau rubriquesBodyEdit
    function displayRubriquesEditTable() {
        var tbody = $("#rubriquesBodyEdit");

        rubriquesDataEdit.forEach(function (rubriqueEdit, index) {
            var row = $("<tr>");

            // Ajouter la désignation
            var designationText = $("#idSousFa option[value='" + rubriqueEdit.idSousFamille + "']").text();
            var designationCell = $("<td>").text(designationText);

            designationCell.css({
                "padding": "8px",
                "border": "1px solid #333"
            });
            row.append(designationCell);

            // Ajouter les autres cellules de la ligne
            var formattedDateRub1 = new Date(rubriqueEdit.dateRub1).toISOString().substr(0, 10);
            var dateCell = $("<td>").text(formattedDateRub1);
            var honorairesCell = $("<td>").text(rubriqueEdit.honorairesRub1);
            var deviseCell = $("<td>").text(rubriqueEdit.deviseRub1);

            var montantConvertiCell = $("<td>").text(rubriqueEdit.montant_change);
            var montantEstiméCell = $("<td>").text(rubriqueEdit.montant_estimé);

            var matriculeCell = $("<td>").text(rubriqueEdit.matriculeFisacalRub1);

            [dateCell, honorairesCell, deviseCell, montantConvertiCell, montantEstiméCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });
            // Ajouter une colonne pour la suppression avec une icône de corbeille
            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne
            deleteIcon.click(function () {
                row.remove(); // Supprimer la ligne du tableau
                alert("ligne supprimé");
            });

            tbody.append(row); // Ajoute la ligne complète au tbody


        });

        // Afficher le tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit").show();


        // Effacer les données du tableau après affichage
        rubriquesDataEdit.length = 0;


    }

    // Fonction pour stocker les rubriquesDataEdit dans le stockage local
    function storeRubriquesDataEditLocally() {
        localStorage.setItem('rubriquesDataEdit', JSON.stringify(rubriquesDataEdit));
    }

    // Fonction pour charger les rubriquesDataEdit depuis le stockage local
    function loadRubriquesDataEditFromLocal() {
        var storedData = localStorage.getItem('rubriquesDataEdit');

    }
    // Fonction pour envoyer les rubriques sauvegardées localement au serveur
    function sendRubriquesDataToServer() {
        // Envoyer les données au serveur via une requête POST
        $.ajax({
            type: "POST",
            url: "/Account/SynchroniserRubriques",
            contentType: "application/json",
            data: JSON.stringify({ rubriquesData: rubriquesDataToSend }),
            success: function (response) {
                // Gérer la réponse du serveur ici
                console.log("Données envoyées avec succès au serveur !");

                // Réinitialiser la variable rubriquesDataToSend après l'envoi des données
                rubriquesDataToSend = [];

            },
            error: function (xhr, status, error) {
                // Gérer les erreurs ici
                alert("Erreur lors de l'envoi des données de rubrique 1 au serveur :", error);
            }
        });
    }
    // Fonction pour supprimer une rubrique de la base de données
    function deleteRubriqueFromDatabase(idRubrique) {
        $.ajax({
            type: "POST",
            url: "/Account/DeleteRubrique",
            data: { idRubrique: idRubrique },
            success: function (response) {
                alert("Rubrique supprimée de la base de données !");
            },
            error: function (xhr, status, error) {
                alert("Erreur lors de la suppression de la rubrique de la base de données :", error);
            }
        });
    }

    //----------------------------------------------------------------------------------------------------------Edit RUB3

    // Fonction pour récupérer les rubriques par idBs
    function getRubriques3ByIdBs(idBs) {
        var idBs = $("#buId").val();

        $.ajax({

            type: "GET",
            url: "/Account/GetRubriques3ByIdBs",
            data: { idBs: idBs },
            // Dans la partie de succès de votre requête AJAX
            success: function (response) {
                if (response && response.length > 0) {

                    response.forEach(function (rubrique3) {
                        if (rubrique3.date) {
                            rubrique3.date = formatDate(rubrique3.date);
                        }
                    });
                    
                    displayRubriquesEdit3(response);
                }
            }, // Ajoutez une virgule ici pour séparer success de error
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }
    // Fonction pour afficher les rubriques dans le tableau d'édition
    function displayRubriquesEdit3(rubriques3) {
        var tbody = $("#rubriquesBodyEdit3");
        tbody.empty();

        rubriques3.forEach(function (rubrique3, index) {
            var row = $("<tr>");

            var idRub3Cell = $("<td>").text(rubrique3.idRub3);
            idRub3Cell.css("display", "none");
            row.append(idRub3Cell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique3.dateRub3.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDateRub3 = formatDate(date);
            // Ajouter la cellule contenant le champ de date
            var dateCell = $("<td>").append(formattedDateRub3);
            row.append(dateCell);

            var dentsCell = $("<td>").text(rubrique3.dents);
            var actMedicalCell = $("<td>").text(rubrique3.actMedical);
            var honorairesCell = $("<td>").text(rubrique3.honorairesRub3);
            var deviseCell = $("<td>").text(rubrique3.deviseRub3);
            var montantConvertiCell = $("<td>").text(rubrique3.montant_change3);

            var matriculeCell = $("<td>").text(rubrique3.matriculeFiscalRub3);

            var typeCell = $("<td>").text(rubrique3.type);

            [dentsCell, actMedicalCell, honorairesCell, deviseCell, montantConvertiCell, matriculeCell, typeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne et la rubrique de la base de données
            deleteIcon.click(function () {
                var idRubrique3 = $(this).closest("tr").find("td:first").text(); // Lire l'ID Rub3 depuis la première colonne cachée
                deleteRubrique3FromDatabase(idRubrique3); // Supprimer la rubrique de la base de données
                row.remove(); // Supprimer la ligne du tableau
            });

            tbody.append(row);
        });

        // Afficher le tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit3").show();
    }

    var rubriquesDataEdit3 = []; // Variable pour stocker toutes les rubriques 3 ajoutées

    // Variable pour stocker les rubriques 3 à envoyer au serveur
    var rubriquesDataToSend3 = [];


    // Fonction pour ajouter une nouvelle rubrique 3 à partir d'un objet rubrique3Edit
    function addRubrique3EditToTable() {
        if ($("#dateRub3").val() && $("#dents").val() && $("#actMedical").val() && $("#honorairesRub3").val() && $("#deviseRub3").val() && $("#matriculeFiscalRub3").val() && $("#dev").val()) {
            var rubrique3Edit = {
                idBs: $("#buId").val(),
                dateRub3: $("#dateRub3").val(),
                dents: $("#dents").val(),
                actMedical: $("#actMedical").val(),
                honorairesRub3: $("#honorairesRub3").val(),
                deviseRub3: $("#deviseRub3").val(),
                montant_change3: $("#montantchan3").val(),

                matriculeFiscalRub3: $("#matriculeFiscalRub3").val(),
                type: $("#dev").val()
            };

            rubriquesDataEdit3.push(rubrique3Edit);
            rubriquesDataToSend3.push(rubrique3Edit);

            $("#dateRub3").val("");
            $("#dents").val("");
            $("#actMedical").val("");
            $("#honorairesRub3").val("");
            $("#montantchan3").val("");

            $("#matriculeFiscalRub3").val("");
            $("#dev").val("");

            displayRubriques3EditTable();

        }
        storeRubriques3DataEditLocally();
    }


    // Fonction pour afficher les rubriques 3 dans le tableau rubriquesBodyEdit3
    function displayRubriques3EditTable() {
        var tbody = $("#rubriquesBodyEdit3");

        rubriquesDataEdit3.forEach(function (rubrique3Edit, index) {
            var row = $("<tr>");

            var formattedDateRub3 = new Date(rubrique3Edit.dateRub3).toISOString().substr(0, 10);
            var dateCell = $("<td>").text(formattedDateRub3);
            var dentsCell = $("<td>").text(rubrique3Edit.dents);
            var actMedicalCell = $("<td>").text(rubrique3Edit.actMedical);
            var honorairesCell = $("<td>").text(rubrique3Edit.honorairesRub3);
            var deviseCell = $("<td>").text(rubrique3Edit.deviseRub3);
            var montantConvertiCell = $("<td>").text(rubrique3Edit.montant_change3);

            var matriculeCell = $("<td>").text(rubrique3Edit.matriculeFiscalRub3);
            var typeCell = $("<td>").text(rubrique3Edit.type);

            [dateCell, dentsCell, actMedicalCell, honorairesCell, deviseCell, montantConvertiCell, matriculeCell, typeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            deleteIcon.click(function () {
                row.remove();
                alert("Ligne supprimée");
            });

            tbody.append(row);
        });

        $("#tableContainerEdit3").show();

        rubriquesDataEdit3.length = 0;
    }
    // Fonction pour stocker les rubriquesDataEdit dans le stockage local
    function storeRubriques3DataEditLocally() {
        localStorage.setItem('rubriquesDataEdit3', JSON.stringify(rubriquesDataEdit3));
    }

    // Fonction pour charger les rubriquesDataEdit depuis le stockage local
    function loadRubriques3DataEditFromLocal() {
        var storedData3 = localStorage.getItem('rubriquesDataEdit3');

    }
    function sendRubriques3DataToServer() {
        // Envoyer les données au serveur via une requête POST
        $.ajax({
            type: "POST",
            url: "/Account/SynchroniserRubriques3",
            contentType: "application/json",
            data: JSON.stringify({ rubriquesData3: rubriquesDataToSend3 }),
            success: function (response) {
                // Gérer la réponse du serveur ici
                console.log("Données envoyées avec succès au serveur !");

                // Réinitialiser la variable rubriquesDataToSend après l'envoi des données
                rubriquesDataToSend3 = [];

            },
            error: function (xhr, status, error) {
                // Gérer les erreurs ici
                alert("Erreur lors de l'envoi des données de rubrique 3 au serveur :", error);
            }
        });
    }
    // Fonction pour supprimer une rubrique de la base de données
    function deleteRubrique3FromDatabase(idRubrique3) {
        $.ajax({
            type: "POST",
            url: "/Account/DeleteRubrique3",
            data: { idRubrique3: idRubrique3 },
            success: function (response) {
                alert("Rubrique supprimée de la base de données !");
            },
            error: function (xhr, status, error) {
                alert("Erreur lors de la suppression de la rubrique de la base de données :", error);
            }
        });
    }



    //-----------------------------------------------------------------------------------------------------Edit RUB2

    function getRubriques2ByIdBs(idBs) {
        var idBs = $("#buId").val();

        $.ajax({

            type: "GET",
            url: "/Account/GetRubriques2ByIdBs",
            data: { idBs: idBs },
            // Dans la partie de succès de votre requête AJAX
            success: function (response) {
                if (response && response.length > 0) {
                    response.forEach(function (rubrique2) {
                        if (rubrique2.date) {
                            rubrique2.date = formatDate(rubrique2.date);
                        }
                    });
                    displayRubriquesEdit2(response);
                }
            }, // Ajoutez une virgule ici pour séparer success de error
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }

    // Fonction pour afficher les rubriques dans le tableau d'édition
    function displayRubriquesEdit2(rubriques2) {
        var tbody = $("#rubriquesBodyEdit2");
        tbody.empty();

        rubriques2.forEach(function (rubrique2, index) {
            var row = $("<tr>");

            // Ajouter l'ID Rub2 (caché)
            var idRub2Cell = $("<td>").text(rubrique2.idRub2);
            idRub2Cell.css("display", "none"); // Cacher la colonne
            row.append(idRub2Cell);
            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique2.DE.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDE = formatDate(date);

            // Ajouter la cellule contenant le champ de date
            var DECell = $("<td>").append(formattedDE);
            row.append(DECell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique2.DS.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDS = formatDate(date);


            // Ajouter la cellule contenant le champ de date
            var DSCell = $("<td>").append(formattedDS);
            row.append(DSCell);
            var montantFraisCell = $("<td>").text(rubrique2.montantFrais);
            var deviseCell = $("<td>").text(rubrique2.deviseRub2);
            var montantConvertiCell = $("<td>").text(rubrique2.montant_change2);

            var matriculeCell = $("<td>").text(rubrique2.matriculeFiscalRub2);

            [montantFraisCell, deviseCell, montantConvertiCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            // Ajouter une colonne pour la suppression avec une icône de corbeille
            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            // Attacher un gestionnaire d'événements pour supprimer la ligne et la rubrique de la base de données
            deleteIcon.click(function () {
                var idRubrique2 = $(this).closest("tr").find("td:first").text(); // Lire l'ID Rub2 depuis la première colonne cachée
                deleteRubrique2FromDatabase(idRubrique2); // Supprimer la rubrique de la base de données
                row.remove(); // Supprimer la ligne du tableau
            });

            tbody.append(row);
        });

        // Afficher le tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit2").show();
    }


    var rubriquesDataEdit2 = []; // Variable pour stocker toutes les rubriques 2 ajoutées
    var rubriquesDataToSend2 = []; // Variable pour stocker les rubriques 2 à envoyer au serveur

    // Fonction pour ajouter une nouvelle rubrique 2 à partir d'un objet rubrique2Edit
    function addRubrique2EditToTable() {
        if ($("#DE").val() && $("#DS").val() && $("#montantFrais").val() && $("#deviseRub2").val() && $("#matriculeFiscalRub2").val()) {
            var rubrique2Edit = {
                idBs: $("#buId").val(),
                DE: $("#DE").val(),
                DS: $("#DS").val(),
                montantFrais: $("#montantFrais").val(),
                deviseRub2: $("#deviseRub2").val(),
                montant_change2: $("#montantchan2").val(),

                matriculeFiscalRub2: $("#matriculeFiscalRub2").val()
            };

            rubriquesDataEdit2.push(rubrique2Edit);
            rubriquesDataToSend2.push(rubrique2Edit);

            $("#DE").val("");
            $("#DS").val("");
            $("#montantFrais").val("");
            $("#montantchan2").val("");

            $("#matriculeFiscalRub2").val("");

            displayRubriques2EditTable();
        }
        storeRubriques2DataEditLocally();
    }

    // Fonction pour afficher les rubriques 2 dans le tableau rubriquesBodyEdit2
    function displayRubriques2EditTable() {
        var tbody = $("#rubriquesBodyEdit2");

        rubriquesDataEdit2.forEach(function (rubrique2Edit, index) {
            var row = $("<tr>");

            var DECell = $("<td>").text(rubrique2Edit.DE);
            var DSCell = $("<td>").text(rubrique2Edit.DS);
            var montantFraisCell = $("<td>").text(rubrique2Edit.montantFrais);
            var deviseCell = $("<td>").text(rubrique2Edit.deviseRub2);
            var montantConvertiCell = $("<td>").text(rubrique2Edit.montant_change2);

            var matriculeCell = $("<td>").text(rubrique2Edit.matriculeFiscalRub2);

            [DECell, DSCell, montantFraisCell, deviseCell, montantConvertiCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            var deleteCell = $("<td>");
            var deleteIcon = $("<i>").addClass("fa fa-trash");
            deleteIcon.css({
                "color": "red",
                "cursor": "pointer"
            });
            deleteCell.css({
                "border": "1px solid #333"
            });
            deleteCell.append(deleteIcon);
            row.append(deleteCell);

            deleteIcon.click(function () {
                row.remove();
                alert("Ligne supprimée");
            });

            tbody.append(row);
        });

        $("#tableContainerEdit2").show();

        rubriquesDataEdit2.length = 0;
    }


    function storeRubriques2DataEditLocally() {
        localStorage.setItem('rubriquesDataEdit2', JSON.stringify(rubriquesDataEdit2));
    }

    // Fonction pour charger les rubriquesDataEdit depuis le stockage local
    function loadRubriques2DataEditFromLocal() {
        var storedData2 = localStorage.getItem('rubriquesDataEdit2');
        if (storedData2) {
            rubriquesDataEdit2 = JSON.parse(storedData2);
        }
    }

    function sendRubriques2DataToServer() {
        // Envoyer les données au serveur via une requête POST
        $.ajax({
            type: "POST",
            url: "/Account/SynchroniserRubriques2",
            contentType: "application/json",
            data: JSON.stringify({ rubriquesData2: rubriquesDataToSend2 }),
            success: function (response) {
                // Gérer la réponse du serveur ici
                console.log("Données envoyées avec succès au serveur !");

                // Réinitialiser la variable rubriquesDataToSend après l'envoi des données
                rubriquesDataToSend2 = [];
            },
            error: function (xhr, status, error) {
                // Gérer les erreurs ici
                alert("Erreur lors de l'envoi des données de rubrique 2 au serveur : " + error);
            }
        });
    }
    // Fonction pour supprimer une rubrique de la base de données
    function deleteRubrique2FromDatabase(idRubrique2) {
        $.ajax({
            type: "POST",
            url: "/Account/DeleteRubrique2",
            data: { idRubrique2: idRubrique2 },
            success: function (response) {
                alert("Rubrique supprimée de la base de données !");
            },
            error: function (xhr, status, error) {
                alert("Erreur lors de la suppression de la rubrique de la base de données :", error);
            }
        });
    }


    //--------------------------------------------------------------------------------------------------------------

    function synchroniserToutesLesRubriques() {
        sendRubriquesDataToServer();
        sendRubriques3DataToServer();
        sendRubriques2DataToServer();
        saveupdateddata();

        alert("Données enregistrées avec succès !");
        window.location.href = "/Account/Dashboard2";
    }


    // Ensuite, vous pouvez attacher cette fonction à un événement de clic sur un bouton, par exemple :
    $(document).ready(function () {
        $('#SaveAll').click(function () {
            synchroniserToutesLesRubriques();
        });
    });
    function saveupdateddata() {
        // Collecter les données générales
        var dataToSend = {
            idBs: $("#buId").val(),
            path: $("#photoPath").val() || "KEEP_EXISTING_PATH",
            idPrestataire: $("#DropDwn").val(),
        };

        // Envoyer les données au serveur
        $.ajax({
            type: "POST",
            url: "/Account/saveUpdatedData",
            data: JSON.stringify(dataToSend), // Envoyer les données sous forme d'objet JSON
            contentType: "application/json",
            success: function (response) {
                if (response.success) {
                    alert("Success!");
                } else {
                    alert("Erreur lors de l'enregistrement des données.");
                }
            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de l'envoi des données au serveur.");
            }
        });
    }



</script>


<!--Taux de change-->
<script>
    //----------------------------------------------------------------------------------------------------------------TAUX

    // Fonction pour gérer le changement de sélection dans la liste de devises
    document.getElementById('deviserub1').onchange = function () {
        var selectedCurrency = this.value; // Récupérer la devise sélectionnée
        var dateRubrique = document.getElementById('daterub1').value; // Récupérer la date de la rubrique

        // Effectuer une requête AJAX vers le serveur
        $.ajax({
            url: '/Account/GetTauxDeChange', // URL de l'action côté serveur
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: dateRubrique }, // Données à envoyer avec la requête
            success: function (response) {
                if (response.error) {
                    alert(response.error); // Afficher une alerte en cas d'erreur
                    // Réinitialiser le montant converti à zéro
                    document.getElementById('montantchan').value = "0.00";
                    document.getElementById('montantEstimé').value = "0.00";

                } else {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var honoraires = parseFloat(document.getElementById('honorub1').value); // Récupérer les honoraires
                    var montantChange = tauxDeChange * honoraires; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti
                    // Mettre à jour le montant estimé
                    updateMontantEstime(); // Appeler la fonction pour mettre à jour le montant estimé

                }
            },
            error: function (xhr, status, error) {
                alert('Erreur lors de la récupération du taux de change : ' + error); // Afficher une alerte en cas d'erreur
                // Réinitialiser le montant converti à zéro
                document.getElementById('montantchan').value = "0.00";
                document.getElementById('montantEstimé').value = "0.00";

            }
        });
    };

    // Fonction pour mettre à jour le montant converti en fonction de la devise sélectionnée
    function updateMontantConverti() {
        var selectedCurrency = document.getElementById('deviserub1').value; // Récupérer la devise sélectionnée
        var dateRubrique = document.getElementById('daterub1').value; // Récupérer la date de la rubrique
        var honoraires = parseFloat(document.getElementById('honorub1').value); // Récupérer les honoraires

        // Récupérer la valeur du champ d'honoraires
        var honorairesValue = parseFloat(document.getElementById('honorub1').value);

        // Vérifier si le champ d'honoraires est rempli
        // if (!isNaN(honorairesValue) && honorairesValue > 0) {
        // Effectuer la requête AJAX pour récupérer le taux de change
        $.ajax({
            url: '/Home/GetTauxDeChange',
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: dateRubrique },
            success: function (response) {
                if (!response.error) {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var montantChange = tauxDeChange * honorairesValue; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti

                    // Mettre à jour automatiquement le montant estimé
                    updateMontantEstime(); // Appeler la fonction de mise à jour du montant estimé
                } else {
                    // Si aucun taux de change n'est trouvé, afficher une alerte et réinitialiser le montant converti à zéro
                    alert('Aucun taux de change trouvé pour la devise sélectionnée et la date de la rubrique.');
                    document.getElementById('montantchan').value = "0.00"; // Réinitialiser le champ à zéro
                    document.getElementById('montantEstimé').value = "0.00"; // Réinitialiser le champ à zéro

                }
            },
            error: function (xhr, status, error) {
                console.error('Erreur lors de la récupération du taux de change : ' + error); // Afficher une erreur dans la console en cas d'erreur
            }
        });
        // } else {
        // Afficher une alerte si le champ d'honoraires est vide ou non numérique
        //   console.log('Veuillez entrer un montant valide pour les honoraires.');
        //}
    }

    // Fonction pour mettre à jour le montant estimé
    function updateMontantEstime() {
        var montantChange = parseFloat($('#montantchan').val()); // Récupérer le montant converti
        var idSousFamille = $('#idSousFa').val();

        $.ajax({
            url: '/Account/GetValeurByIdSousFamille',
            type: 'GET',
            data: { idSousFamille: idSousFamille },
            success: function (response) {
                if (response && response.Valeur !== undefined && response.Unite !== undefined && response.Max !== undefined) {
                    var valeur = parseFloat(response.Valeur);
                    var unite = response.Unite;
                    var max = parseFloat(response.Max);

                    console.log("La valeur est ", valeur, " et l'unité est ", unite, " avec un maximum de ", max);

                    var montantEstime;

                    if (unite === 'Jour') {
                        var nbJour = montantChange / 25;
                        if (nbJour < max) {
                            montantEstime = 25 * nbJour;
                            $('#messageMax').text(""); // Effacer le message s'il n'a pas atteint le maximum
                            // Calculer le montant estimé pour l'unité en jours
                        } else if (nbJour > max) {
                            montantEstime = max * 25;
                            var message = "Plafond atteint ! ";
                            $('#messageMax').text(message);// Utiliser le maximum si le nombre de jours dépasse le maximum
                        }
                    } else if (unite === '%') {
                        montantEstime = (montantChange * valeur) / 100;
                        $('#messageMax').text(""); // Effacer le message s'il n'a pas atteint le maximum
                        // Calculer le montant estimé pour l'unité en pourcentage
                        if (montantEstime > max) {
                            montantEstime = max;
                            var message = "Plafond atteint ! ";
                            $('#messageMax').text(message); // Limiter montantEstime à la valeur de max si elle dépasse
                        }
                    }



                    $('#montantEstimé').val(montantEstime.toFixed(2)); // Mettre à jour le champ montantEstimé avec le résultat calculé
                } else {
                    console.error("La réponse de l'API est incomplète ou incorrecte.");
                }
            },
            error: function (xhr, status, error) {
                console.error('Erreur lors de la récupération des données de la sous-famille : ' + error);
            }
        });
    }

    // Appeler la fonction de mise à jour du montant converti lors du chargement de la page ou lorsque les champs pertinents changent
    $(document).ready(function () {
        // Appeler la fonction de mise à jour du montant converti au chargement de la page
        updateMontantConverti();

        // Ajouter des écouteurs d'événements onchange aux champs de date et d'honoraires
        document.getElementById('daterub1').onchange = updateMontantConverti;
        document.getElementById('honorub1').onchange = updateMontantConverti;
        document.getElementById('deviserub1').onchange = updateMontantConverti;
        document.getElementById('idSousFa').onchange = updateMontantEstime;

    });



    // Ajouter des écouteurs d'événements onchange aux champs de date et d'honoraires
    document.getElementById('daterub1').onchange = updateMontantConverti;
    document.getElementById('honorub1').onchange = updateMontantConverti;
    document.getElementById('deviserub1').onchange = updateMontantConverti;
    document.getElementById('idSousFa').onchange = updateMontantEstime;

    document.getElementById('deviseRub2').onchange = function () {
        var selectedCurrency = this.value; // Récupérer la devise sélectionnée
        var dateRubrique = document.getElementById('DE').value; // Récupérer la date de la rubrique

        // Effectuer une requête AJAX vers le serveur
        $.ajax({
            url: '/Account/GetTauxDeChange2', // URL de l'action côté serveur
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: dateRubrique }, // Données à envoyer avec la requête
            success: function (response) {
                if (response.error) {
                    alert(response.error); // Afficher une alerte en cas d'erreur
                    // Réinitialiser le montant converti à zéro
                    document.getElementById('montantchan2').value = "0.00";

                } else {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var montantFrais = parseFloat(document.getElementById('montantFrais').value); // Récupérer le montant des frais
                    var montantChange = tauxDeChange * montantFrais; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan2').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti
                }
            },
            error: function (xhr, status, error) {
                alert('Erreur lors de la récupération du taux de change : ' + error); // Afficher une alerte en cas d'erreur
                document.getElementById('montantchan').value = "0.00";
            }
        });
    };
    // Fonction pour mettre à jour le montant converti
    function updateMontantConverti2() {
        var selectedCurrency = document.getElementById('deviseRub2').value; // Récupérer la devise sélectionnée
        var dateRubrique = document.getElementById('DE').value; // Récupérer la date de la rubrique
        var honoraires = parseFloat(document.getElementById('montantFrais').value); // Récupérer les honoraires

        // Effectuer une requête AJAX vers le serveur pour récupérer le taux de change
        $.ajax({
            url: '/Account/GetTauxDeChange2',
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: dateRubrique },
            success: function (response) {
                if (!response.error) {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var montantChange = tauxDeChange * honoraires; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan2').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti
                } else {
                    // Si aucun taux de change n'est trouvé, afficher une alerte et réinitialiser le montant converti à zéro
                    alert('Aucun taux de change trouvé pour la devise sélectionnée et la date de la rubrique.');
                    document.getElementById('montantchan2').value = "0.00"; // Réinitialiser le champ à zéro
                }
            },
            error: function (xhr, status, error) {
                console.error('Erreur lors de la récupération du taux de change : ' + error); // Afficher une erreur dans la console en cas d'erreur
            }
        });
    }

    // Ajouter des écouteurs d'événements onchange aux champs de date et d'honoraires
    document.getElementById('DE').onchange = updateMontantConverti2;
    document.getElementById('montantFrais').onchange = updateMontantConverti2;

    document.getElementById('deviseRub3').onchange = function () {
        var selectedCurrency = this.value; // Récupérer la devise sélectionnée
        var rubriqueDate = document.getElementById('dateRub3').value; // Récupérer la date de la rubrique

        // Effectuer une requête AJAX vers le serveur
        $.ajax({
            url: '/Account/GetTauxDeChange3', // URL de l'action côté serveur
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: rubriqueDate }, // Données à envoyer avec la requête
            success: function (response) {
                if (response.error) {
                    alert(response.error); // Afficher une alerte en cas d'erreur
                    // Réinitialiser le montant converti à zéro
                    document.getElementById('montantchan3').value = "0.00";

                } else {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var honoraires = parseFloat(document.getElementById('honorairesRub3').value); // Récupérer les honoraires
                    var montantChange = tauxDeChange * honoraires; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan3').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti
                }
            },
            error: function (xhr, status, error) {
                alert('Erreur lors de la récupération du taux de change : ' + error); // Afficher une alerte en cas d'erreur
                // Réinitialiser le montant converti à zéro
                document.getElementById('montantchan').value = "0.00";

            }
        });
    };

    // Fonction pour mettre à jour le montant converti
    function updateMontantConverti3() {
        var selectedCurrency = document.getElementById('deviseRub3').value; // Récupérer la devise sélectionnée
        var dateRubrique = document.getElementById('dateRub3').value; // Récupérer la date de la rubrique
        var honoraires = parseFloat(document.getElementById('honorairesRub3').value); // Récupérer les honoraires

        // Effectuer une requête AJAX vers le serveur pour récupérer le taux de change
        $.ajax({
            url: '/Account/GetTauxDeChange3',
            type: 'GET',
            data: { selectedCurrency: selectedCurrency, rubriqueDate: dateRubrique },
            success: function (response) {
                if (!response.error) {
                    var tauxDeChange = response.taux; // Récupérer le taux de change de la réponse
                    var montantChange = tauxDeChange * honoraires; // Calculer le montant converti

                    // Afficher le montant converti dans le champ correspondant
                    document.getElementById('montantchan3').value = montantChange.toFixed(2); // Mettre à jour le champ avec le montant converti
                } else {
                    // Si aucun taux de change n'est trouvé, afficher une alerte et réinitialiser le montant converti à zéro
                    alert('Aucun taux de change trouvé pour la devise sélectionnée et la date de la rubrique.');
                    document.getElementById('montantchan3').value = "0.00"; // Réinitialiser le champ à zéro
                }
            },
            error: function (xhr, status, error) {
                console.error('Erreur lors de la récupération du taux de change : ' + error); // Afficher une erreur dans la console en cas d'erreur
            }
        });
    }

    // Ajouter des écouteurs d'événements onchange aux champs de date et d'honoraires
    document.getElementById('dateRub3').onchange = updateMontantConverti3;
    document.getElementById('honorairesRub3').onchange = updateMontantConverti3;





</script>

<script>

    //------------------------------------------------------------------------------------------------------details
    // Fonction pour activer l'élément
    function enableElement() {
        $("#myElement").removeClass("disabled-element").addClass("enabled-element");
    }



    //pour les nouveau bs
    function voirPlus(idBs) {
        var url = "/Home/GetbsNewById?idBs=" + idBs;
        $("#ModalTitle").html("Détails de Bulletin de Soin");
        $("#MyModal").modal("show");
        $("#SaveBSRecord").hide();
        $("#AddOther").hide();
        $("#editOther").hide();
        $("#AddOther3").hide();
        $("#editOther3").hide();
        enableElement();

        $("#AddOtherEdit").hide();
        $("#AddOtherEdit3").hide();
        $("#AddOtherEdit2").hide();


        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                // Remplir les champs du formulaire avec les données récupérées
                $("#buId").val(data.idBs).prop('disabled', true);
                $("#num").val(data.numBs).prop('disabled', true);

                $("#adhId").val(data.idAdherent).prop('disabled', true);
                $("#nomAdh").val(data.nomAdh).prop('disabled', true);
                $("#pnomAdh").val(data.prenomAdh).prop('disabled', true);
                $("#matCnam").val(data.matriculeCnam).prop('disabled', true);
                $("#cin_pass").val(data.CIN_PASS).prop('disabled', true);
                $("#adressA").val(data.adressAdh).prop('disabled', true);
                $("#DropDwn").val(data.idPrestataire).prop('disabled', true);
                $("#path").val(data.path).prop('disabled', true);

                // Appel de la fonction getRubriquesByIdBs avec l'identifiant de bulletin de soin
                getRubriquesByIdBsDetails(data.idBs);
                // Cacher la colonne "Action" du tableau
                $("#tableContainerEdit th:last-child, #tableContainerEdit td:last-child").hide();

                $("#daterub1").val("").prop('disabled', true);
                $("#idSousFa").val("").prop('disabled', true);
                $("#honorub1").val("").prop('disabled', true);
                $("#deviserub1").val("TND").prop('disabled', true);
                $("#montantchan").val("").prop('disabled', true);
                $("#matfiscal1").val("").prop('disabled', true);
                $("#montantEstimé").val("").prop('disabled', true);


                getRubriques2ByIdBsDetails(data.idBs);
                $("#tableContainerEdit2 th:last-child, #tableContainerEdit2 td:last-child").hide();


                $("#DE").val("").prop('disabled', true);
                $("#DS").val("").prop('disabled', true);
                $("#montantFrais").val("").prop('disabled', true);
                $("#deviseRub2").val("TND").prop('disabled', true);
                $("#montantchan2").val("").prop('disabled', true);
                $("#montantEstimé2").val("").prop('disabled', true);

                $("#matriculeFiscalRub2").val("").prop('disabled', true);


                getRubriques3ByIdBsDetails(data.idBs);
                $("#tableContainerEdit3 th:last-child, #tableContainerEdit3 td:last-child").hide();


                $("#dateRub3").val("").prop('disabled', true);
                $("#dents").val("").prop('disabled', true);
                $("#actMedical").val("").prop('disabled', true);
                $("#honorairesRub3").val("").prop('disabled', true);
                $("#deviseRub3").val("TND").prop('disabled', true);
                $("#montantchan3").val("").prop('disabled', true);
                $("#montantEstimé3").val("").prop('disabled', true);

                $("#matriculeFiscalRub3").val("").prop('disabled', true);
                $("#dev").val("").prop('disabled', true);

                getPhoto(data)

            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des données.");
            }
        });
    }

    // Fonction pour désactiver l'élément
    function disableElement() {
        $("#myElement").removeClass("enabled-element").addClass("disabled-element");
    }


    //pour les bs :
    function ShowbsDetails(idBs) {
        var url = "/Home/GetbsById?idBs=" + idBs;
        $("#ModalTitle").html("Détails de Bulletin de Soin");
        $("#MyModal").modal("show");
        $("#SaveBSRecord").hide();
        $("#SaveAll").hide();

        $("#AddOther").hide();
        $("#editOther").hide();
        $("#AddOther3").hide();
        $("#editOther3").hide();

        $("#5a").hide();
        disableElement();
        $("#AddOtherEdit").hide();
        $("#AddOtherEdit3").hide();
        $("#AddOtherEdit2").hide();


        $.ajax({
            type: "GET",
            url: url,
            success: function (data) {
                // Remplir les champs du formulaire avec les données récupérées
                $("#buId").val(data.idBs).prop('disabled', true);
                $("#num").val(data.numBs).prop('disabled', true);

                $("#adhId").val(data.idAdherent).prop('disabled', true);
                $("#nomAdh").val(data.nomAdh).prop('disabled', true);
                $("#pnomAdh").val(data.prenomAdh).prop('disabled', true);
                $("#matCnam").val(data.matriculeCnam).prop('disabled', true);
                $("#cin_pass").val(data.CIN_PASS).prop('disabled', true);
                $("#adressA").val(data.adressAdh).prop('disabled', true);

                $("#DropDwn").val(data.idPrestataire).prop('disabled', true);

                // Appel de la fonction getRubriquesByIdBs avec l'identifiant de bulletin de soin
                getRubriquesByIdBsDetails(data.idBs);
                // Cacher la colonne "Action" du tableau
                $("#tableContainerEdit th:last-child, #tableContainerEdit td:last-child").hide();

                $("#daterub1").val("").prop('disabled', true);
                $("#idSousFa").val("").prop('disabled', true);
                $("#honorub1").val("").prop('disabled', true);
                $("#deviserub1").val("TND").prop('disabled', true);
                $("#montantchan").val("").prop('disabled', true);
                $("#matfiscal1").val("").prop('disabled', true);
                $("#montantEstimé").val("").prop('disabled', true);

                getRubriques2ByIdBsDetails(data.idBs);
                $("#tableContainerEdit2 th:last-child, #tableContainerEdit2 td:last-child").hide();


                $("#DE").val("").prop('disabled', true);
                $("#DS").val("").prop('disabled', true);
                $("#montantFrais").val("").prop('disabled', true);
                $("#deviseRub2").val("TND").prop('disabled', true);
                $("#montantchan2").val("").prop('disabled', true);
                $("#montantEstimé2").val("").prop('disabled', true);

                $("#matriculeFiscalRub2").val("").prop('disabled', true);


                getRubriques3ByIdBsDetails(data.idBs);
                $("#tableContainerEdit3 th:last-child, #tableContainerEdit3 td:last-child").hide();


                $("#dateRub3").val("").prop('disabled', true);
                $("#dents").val("").prop('disabled', true);
                $("#actMedical").val("").prop('disabled', true);
                $("#honorairesRub3").val("").prop('disabled', true);
                $("#deviseRub3").val("TND").prop('disabled', true);
                $("#montantchan3").val("").prop('disabled', true);
                $("#montantEstimé3").val("").prop('disabled', true);

                $("#matriculeFiscalRub3").val("").prop('disabled', true);
                $("#dev").val("").prop('disabled', true);
            },
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des données.");
            }
        });
    }


    function getRubriquesByIdBsDetails(idBs) {
        var idBs = $("#buId").val();

        $.ajax({

            type: "GET",
            url: "/Account/GetRubriquesByIdBs",
            data: { idBs: idBs },
            // Dans la partie de succès de votre requête AJAX
            success: function (response) {
                if (response && response.length > 0) {
                    displayRubriquesWithoutDelete(response);
                }
            }, // Ajoutez une virgule ici pour séparer success de error
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }


    // Fonction pour afficher les rubriques dans le tableau sans la colonne de suppression
    function displayRubriquesWithoutDelete(rubriques) {
        var tbody = $("#rubriquesBodyEdit");
        tbody.empty();

        rubriques.forEach(function (rubrique, index) {
            var row = $("<tr>");

            // Ajouter l'ID Rub1 (caché)
            var idRub1Cell = $("<td>").text(rubrique.idRub1);
            idRub1Cell.css("display", "none"); // Cacher la colonne
            row.append(idRub1Cell);

            // Ajouter les valeurs de désignation à la ligne du tableau
            var designationCell = $("<td>").text(rubrique.codeNom + " - " + rubrique.nomSousFamille);
            designationCell.css({
                "padding": "10px",
                "border": "1px solid #333"
            });
            row.append(designationCell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique.dateRub1.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDateRub1 = date.toISOString().substr(0, 10);

            // Ajouter la cellule contenant le champ de date
            var dateCell = $("<td>").append(formattedDateRub1);
            row.append(dateCell);

            // Ajouter les autres cellules
            var honorairesCell = $("<td>").text(rubrique.honorairesRub1);
            var deviseCell = $("<td>").text(rubrique.deviseRub1);
            var montantConvertiCell = $("<td>").text(rubrique.montant_change);
            var montantEstiméCell = $("<td>").text(rubrique.montant_estimé);

            var matriculeCell = $("<td>").text(rubrique.matriculeFisacalRub1);

            [honorairesCell, deviseCell, montantConvertiCell, montantEstiméCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            tbody.append(row);
        });

        // Afficher le tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit").show();
    }

    function getRubriques2ByIdBsDetails(idBs) {
        var idBs = $("#buId").val();

        $.ajax({

            type: "GET",
            url: "/Account/GetRubriques2ByIdBs",
            data: { idBs: idBs },
            // Dans la partie de succès de votre requête AJAX
            success: function (response) {
                if (response && response.length > 0) {
                    displayRubriquesEdit2WithoutDelete(response);
                }
            }, // Ajoutez une virgule ici pour séparer success de error
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }

    // Fonction pour afficher les rubriques dans le deuxième tableau d'édition sans la colonne de suppression
    function displayRubriquesEdit2WithoutDelete(rubriques2) {
        var tbody = $("#rubriquesBodyEdit2");
        tbody.empty();

        rubriques2.forEach(function (rubrique2, index) {
            var row = $("<tr>");

            // Ajouter l'ID Rub2 (caché)
            var idRub2Cell = $("<td>").text(rubrique2.idRub2);
            idRub2Cell.css("display", "none"); // Cacher la colonne
            row.append(idRub2Cell);
            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique2.DE.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDE = date.toISOString().substr(0, 10);

            // Ajouter la cellule contenant le champ de date
            var DECell = $("<td>").append(formattedDE);
            row.append(DECell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique2.DS.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDS = date.toISOString().substr(0, 10);

            // Ajouter la cellule contenant le champ de date
            var DSCell = $("<td>").append(formattedDS);
            row.append(DSCell);
            var montantFraisCell = $("<td>").text(rubrique2.montantFrais);
            var deviseCell = $("<td>").text(rubrique2.deviseRub2);
            var montantConvertiCell = $("<td>").text(rubrique2.montant_change2);

            var matriculeCell = $("<td>").text(rubrique2.matriculeFiscalRub2);

            [montantFraisCell, deviseCell, montantConvertiCell, matriculeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            tbody.append(row);
        });

        // Afficher le deuxième tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit2").show();
    }


    function getRubriques3ByIdBsDetails(idBs) {
        var idBs = $("#buId").val();

        $.ajax({

            type: "GET",
            url: "/Account/GetRubriques3ByIdBs",
            data: { idBs: idBs },
            // Dans la partie de succès de votre requête AJAX
            success: function (response) {
                if (response && response.length > 0) {
                    displayRubriquesEdit3WithoutDelete(response);
                }
            }, // Ajoutez une virgule ici pour séparer success de error
            error: function (xhr, status, error) {
                alert("Une erreur s'est produite lors de la récupération des rubriques.");
            }
        });
    }

    // Fonction pour afficher les rubriques dans le troisième tableau d'édition sans la colonne de suppression
    function displayRubriquesEdit3WithoutDelete(rubriques3) {
        var tbody = $("#rubriquesBodyEdit3");
        tbody.empty();

        rubriques3.forEach(function (rubrique3, index) {
            var row = $("<tr>");

            var idRub3Cell = $("<td>").text(rubrique3.idRub3);
            idRub3Cell.css("display", "none");
            row.append(idRub3Cell);

            // Ajouter les autres cellules avec les données de la rubrique
            var dateMilliseconds = parseInt(rubrique3.dateRub3.substr(6));
            var date = new Date(dateMilliseconds);
            var formattedDateRub3 = date.toISOString().substr(0, 10);

            // Ajouter la cellule contenant le champ de date
            var dateCell = $("<td>").append(formattedDateRub3);
            row.append(dateCell);

            var dentsCell = $("<td>").text(rubrique3.dents);
            var actMedicalCell = $("<td>").text(rubrique3.actMedical);
            var honorairesCell = $("<td>").text(rubrique3.honorairesRub3);
            var deviseCell = $("<td>").text(rubrique3.deviseRub3);
            var montantConvertiCell = $("<td>").text(rubrique3.montant_change3);
            var matriculeCell = $("<td>").text(rubrique3.matriculeFiscalRub3);
            var typeCell = $("<td>").text(rubrique3.type);

            [dentsCell, actMedicalCell, honorairesCell, deviseCell, montantConvertiCell, matriculeCell, typeCell].forEach(function (cell) {
                cell.css({
                    "padding": "10px",
                    "border": "1px solid #333"
                });
                row.append(cell);
            });

            tbody.append(row);
        });

        // Afficher le troisième tableau une fois que toutes les lignes ont été ajoutées
        $("#tableContainerEdit3").show();
    }

</script>

<body id="page-top">

    <ul class="navbar-nav ml-auto">

        <!-- Nav Item - Search Dropdown (Visible Only XS) -->
        <li class="nav-item dropdown no-arrow d-sm-none">
            <a class="nav-link dropdown-toggle" href="#" id="searchDropdown" role="button"
               data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                <i class="fas fa-search fa-fw"></i>
            </a>
            <!-- Dropdown - Messages -->
            <div class="dropdown-menu dropdown-menu-right p-3 shadow animated--grow-in"
                 aria-labelledby="searchDropdown">
                <form class="form-inline mr-auto w-100 navbar-search">
                    <div class="input-group">
                        <input type="text" class="form-control bg-light border-0 small"
                               placeholder="Search for..." aria-label="Search"
                               aria-describedby="basic-addon2">
                        <div class="input-group-append">
                            <button class="btn btn-primary" type="button">
                                <i class="fas fa-search fa-sm"></i>
                            </button>
                        </div>
                    </div>
                </form>
            </div>
        </li>


        <!--                Mon Compte <i class="bi bi-airplane" style="font-size: 0.8em;"></i>    -->
        <!--Navigation-->
        <header id="header" class="fixed-top d-flex align-items-center">
            <div class="container d-flex justify-content-between">

                <div class="logo">
                    <!-- Uncomment below if you prefer to use an text logo -->
                    <!-- <h1><a href="index.html">NewBiz</a></h1> -->
                    <a href="#"><img src="~/assets/img/Tunisair_(logo).svg" alt="" class="img-fluid" style=" max-height: 100px;"></a>
                </div>

                <nav id="navbar" class="navbar">
                    <ul>
                        <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="#">Acceuil</a></li>
                        <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="#bs">BS validés</a></li>

                        <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="#bsNew">Bs Non Validés</a></li>

                        <li class="nav-item mx-0 mx-lg-1"><a class="nav-link py-3 px-0 px-lg-3 rounded" href="#contact">Contact</a></li>
                        <li class="nav-item mx-0 mx-lg-1">
                            <a class="nav-link py-3 px-0 px-lg-3 rounded" href="~/Account/adhInfo" style="margin-left: 100px;">
                                <i class="bi bi-person-circle" data-toggle="tooltip" data-placement="bottom" title="profil" style="font-size:25px;"></i>
                                <span style="margin-left: 5px;">@Model.Adherent.nomAdh @Model.Adherent.prenomAdh</span>
                            </a>


                        </li>


                    </ul>
                    <div>
                        <a href="~/Account/Login" class="btn-log-out" style="border: 2px solid #004289; color: #004289; margin-left: 100px; border-radius: 50px; text-align: center; text-decoration: none; padding: 5px 20px 5px 20px; " onmouseover="this.style.background='#004289'; this.style.color='#ffffff';" onmouseout="this.style.background='#ffffff'; this.style.color='#1549c2';">Déconnexion</a>
                    </div>

                    <i class="bi bi-list mobile-nav-toggle"></i>
                </nav><!-- .navbar -->

            </div>
        </header><!-- #header -->
        <!-- Masthead-->
        <header class="masthead bg-primary text-white text-center" style="margin-top:2px;">

            <div class="container d-flex align-items-center flex-column">
                <!-- Masthead Avatar Image-->
                <img class="masthead-avatar mb-5" src="~/images/adh9-removebg-preview.png" />

                <!-- Masthead Heading-->
                <h2 class="masthead-heading text-uppercase  mb-0" style="font-family:initial;"> Espace adhérent</h2>
                <!-- Icon Divider-->
                <div class="divider-custom divider-light">
                    <div class="divider-custom-line"></div>
                    <div class="divider-custom-icon">
                        <i class="bi bi-person-vcard"></i>
                    </div>
                    <div class="divider-custom-line"></div>
                </div>
                <!-- Masthead Subheading-->



            </div>
        </header>

        <!--logout-->
        <script>
            document.getElementById("logout").addEventListener("click", function (event) {
                event.preventDefault(); // Empêche le comportement par défaut du lien

                // Envoyer une requête au serveur pour déconnecter l'utilisateur
                // Vous pouvez utiliser AJAX ici ou une redirection vers une page de déconnexion
                // Par exemple, une redirection vers "/Account/Logout"
                fetch("/Account/Logout", {
                    method: "POST", // Vous pouvez également utiliser GET ou tout autre méthode appropriée
                    credentials: "same-origin" // Assure que les cookies de session sont envoyés avec la requête
                }).then(function (response) {
                    // Gérer la réponse de la requête (par exemple, une redirection)
                    if (response.ok) {
                        window.location.href = "/Account/Login"; // Redirection vers la page de connexion
                    } else {
                        console.error("La déconnexion a échoué.");
                    }
                }).catch(function (error) {
                    console.error("Erreur lors de la déconnexion:", error);
                });
            });
        </script>

        <!-- BS Section-->
        <section class="page-section portfolio" id="bs">
            <div class="container">
                <div class="row mt-3">

                    <!-- Portfolio Section Heading-->
                    <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Liste des Bulletins de Soin</h2>
                    <!-- Icon Divider-->
                    <div class="divider-custom">
                        <div class="divider-custom-line"></div>
                        <div class="divider-custom-icon"><i class="bi bi-list-check"></i></div>
                        <div class="divider-custom-line"></div>
                    </div>
                    <div class="row mt-3" style="max-height: 500px; overflow-y: auto;">
                        <div class="col-md-12" style="max-height: 450px;">
                            <table id="bsTable" class="table table-hover" style="text-align: center; border-color: #2b2b2b;">
                                <thead class="thead-light" style="font-weight: bold;">
                                    <tr>
                                        <th>Id Bulletin</th>
                                        <th>Status</th>

                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="setbsList">
                                    @foreach (var bulletin in Model.BulletinSoin)
                                    {

                                        <tr>
                                            <td>@bulletin.numBs</td>
                                            <td>@bulletin.status</td>


                                            <td>

                                                <!-- Bouton pour afficher les détails -->
                                                <a href="#" class="btn btn-info details-link" style="background-color: #0dcaf0;" data-bsid="@bulletin.idBs" data-prestatairecode="@bulletin.codePrestataire" data-status="@bulletin.status" data-bsnum="@bulletin.numBs" data-path="@bulletin.path">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                @if (bulletin.Rubrique != null && bulletin.Rubrique.Any())
                                                {
                                                    foreach (var rubrique in bulletin.Rubrique)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique-details" data-idrub1="@rubrique.idRub1" data-daterub1="@rubrique.dateRub1" data-sousfamilleid="@rubrique.idSousFamille" data-sousfamillecode="@rubrique.codeNom" data-sousfamillenom="@rubrique.nomSousFamille" data-honorairesrub1="@rubrique.honorairesRub1" data-deviserub1="@rubrique.deviseRub1" data-matriculefisacalrub1="@rubrique.matriculeFisacalRub1">
                                                                Rubrique Details
                                                            </div>
                                                        </text>
                                                    }
                                                }

                                                @if (bulletin.Rubrique_2 != null && bulletin.Rubrique_2.Any())
                                                {
                                                    foreach (var rubrique2 in bulletin.Rubrique_2)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique2-details" data-idrub2="@rubrique2.idRub2" data-de="@rubrique2.DE" data-ds="@rubrique2.DS" data-montantfrais="@rubrique2.montantFrais" data-deviserub2="@rubrique2.deviseRub2" data-matriculefiscalrub2="@rubrique2.matriculeFiscalRub2" data-MC="@rubrique2.montant_change2">
                                                                Rubrique 2 Details
                                                            </div>
                                                        </text>
                                                    }
                                                }
                                                @if (bulletin.Rubrique_3 != null && bulletin.Rubrique_3.Any())
                                                {
                                                    foreach (var rubrique3 in bulletin.Rubrique_3)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique3-details" data-idrub3="@rubrique3.idRub3" data-daterub3="@rubrique3.dateRub3" data-dents="@rubrique3.dents" data-actmedical="@rubrique3.actMedical" data-honorairesrub3="@rubrique3.honorairesRub3" data-deviserub3="@rubrique3.deviseRub3" data-matriculefiscalrub3="@rubrique3.matriculeFiscalRub3" data-type="@rubrique3.type" data-MC3="@rubrique3.montant_change3">
                                                                Rubrique 3 Details
                                                            </div>
                                                        </text>
                                                    }
                                                }
                                            </td>
                                        </tr>

                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>
        </section>

        <!--popup pour les rubriques -->
        <div class="popup" id="popup" style="max-width: 70%; position: fixed; top: 50%; left: 50%; transform: translate(-50%, -50%);">
            <div class="modal-dialog">
                <div class="modal-content">
                    <div class="modal-header">
                        <ul class="nav nav-tabs" id="popupTabs" style="font-weight:bold;">
                            <li class="nav-item"><a class="nav-link active" data-toggle="tab" href="#soins">Soins & Consultations Médicaux</a></li>
                            <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#hospitalisation">Hospitalisation</a></li>
                            <li class="nav-item"><a class="nav-link" data-toggle="tab" href="#rubrique3">Rubrique 3</a></li>

                        </ul>
                        <button type="button" class="close" data-dismiss="modal" style="margin-top: -30;"><a href="Dashboard2">&times;</a></button>
                    </div>
                    <div class="modal-body">
                        <div class="tab-content">
                            <div class="tab-pane fade show active" id="soins">
                                <div class="popup-content" style="max-height: 300px; overflow-y: auto;">
                                    <!-- Contenu de la section Soins & Consultations Médicaux ici -->
                                    <img id="bsPhoto" src="#" alt="Photo" style="max-width: 100%; height: auto; display: none;">
                                </div>

                            </div>
                            <div class="tab-pane fade" id="hospitalisation">
                                <div class="popup-content" style="max-height: 300px; overflow-y: auto;">
                                    <!-- Contenu de la section Hospitalisation ici -->
                                </div>
                            </div>
                            <div class="tab-pane fade" id="rubrique3">
                                <div class="popup-content" style="max-height: 300px; overflow-y: auto;">
                                    <!-- Contenu de la section Rubrique 3 ici -->
                                </div>
                            </div>



                        </div>
                    </div>
                </div>
            </div>
        </div>



        <!--BS En attente-->
        <section class="page-section bg-primary text-white mb-0" id="bsNew">
            <div class="container">
                <div class="row mt-3">

                    <!-- Portfolio Section Heading-->
                    <h2 class="page-section-heading text-center text-uppercase text-white">Liste des nouveaux BS non validés</h2>
                    <!-- Icon Divider-->
                    <div class="divider-custom divider-light">
                        <div class="divider-custom-line"></div>
                        <div class="divider-custom-icon"><i class="bi bi-list-ul"></i></div>
                        <div class="divider-custom-line"></div>
                    </div>
                    <div class="col-md-12" style="text-align:right;">
                        <a href="#" class="btn btn-info" onclick="AddNewBSenAttente(0)" style="--bs-btn-border-color:blue; --bs-btn-bg: white; --bs-btn-border-color: aliceblue; --bs-btn-hover-color: rgba(255, 255, 255, 0.9); --bs-btn-hover-bg: #94aac1; --bs-btn-hover-border-color: #dee2e6; ">Ajouter</a>
                    </div>
                    <div class="row mt-3" style="max-height: 450px; overflow-y: auto; background-color:white;">
                        <div class="col-md-12" style="padding-top: 2%; max-height: 420px;">
                            <table id="bsTableNew" class="table table-hover" style="text-align: center; border-color: #2b2b2b; background-color:white;">
                                <thead class="thead-light" style="font-weight: bold;">
                                    <tr>
                                        <th>numéro Bulletin</th>
                                        <th>state</th>

                                        <th>Action</th>
                                    </tr>
                                </thead>
                                <tbody id="setbsList">
                                    @foreach (var bulletinNew in Model.BulletinSoinNew)
                                    {
                                        <tr>
                                            <td>@bulletinNew.numBs</td>

                                            <td>@bulletinNew.status</td>


                                            <td>
                                                <!-- Bouton pour modifier -->
                                                <a href="#" class="btn btn-warning edit-link" data-bsid="@bulletinNew.idBs">
                                                    <i class="bi bi-pencil-square"></i>
                                                </a>
                                                <!-- Bouton pour afficher les détails -->
                                                <a href="#" class="btn btn-info details-linkNew" style="background-color: #0dcaf0;" data-bsid="@bulletinNew.idBs" data-prestatairecode="@bulletinNew.codePrestataire" data-status="@bulletinNew.status" data-bsnum="@bulletinNew.numBs" data-path="@bulletinNew.path">
                                                    <i class="bi bi-eye"></i>
                                                </a>
                                                @if (bulletinNew.Rubrique != null && bulletinNew.Rubrique.Any())
                                                {
                                                    foreach (var rubrique in bulletinNew.Rubrique)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique-details" data-idrub1="@rubrique.idRub1" data-daterub1="@rubrique.dateRub1" data-sousfamilleid="@rubrique.idSousFamille" data-sousfamillecode="@rubrique.codeNom" data-sousfamillenom="@rubrique.nomSousFamille" data-honorairesrub1="@rubrique.honorairesRub1" data-deviserub1="@rubrique.deviseRub1" data-matriculefisacalrub1="@rubrique.matriculeFisacalRub1">
                                                                Rubrique Details
                                                            </div>
                                                        </text>
                                                    }
                                                }

                                                @if (bulletinNew.Rubrique_2 != null && bulletinNew.Rubrique_2.Any())
                                                {
                                                    foreach (var rubrique2 in bulletinNew.Rubrique_2)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique2-details" data-idrub2="@rubrique2.idRub2" data-de="@rubrique2.DE" data-ds="@rubrique2.DS" data-montantfrais="@rubrique2.montantFrais" data-deviserub2="@rubrique2.deviseRub2" data-matriculefiscalrub2="@rubrique2.matriculeFiscalRub2" data-MC="@rubrique2.montant_change2">
                                                                Rubrique 2 Details
                                                            </div>
                                                        </text>
                                                    }
                                                }
                                                @if (bulletinNew.Rubrique_3 != null && bulletinNew.Rubrique_3.Any())
                                                {
                                                    foreach (var rubrique3 in bulletinNew.Rubrique_3)
                                                    {
                                                        <text>
                                                            <div style="display: none;" class="rubrique3-details" data-idrub3="@rubrique3.idRub3" data-daterub3="@rubrique3.dateRub3" data-dents="@rubrique3.dents" data-actmedical="@rubrique3.actMedical" data-honorairesrub3="@rubrique3.honorairesRub3" data-deviserub3="@rubrique3.deviseRub3" data-matriculefiscalrub3="@rubrique3.matriculeFiscalRub3" data-type="@rubrique3.type" data-MC3="@rubrique3.montant_change3">
                                                                Rubrique 3 Details
                                                            </div>
                                                        </text>
                                                    }
                                                }


                                            </td>
                                        </tr>

                                    }
                                </tbody>

                            </table>
                        </div>
                    </div>
                </div>

            </div>
        </section>

        <!--datatables -->
        <script>
            $(document).ready(function () {
                $('#bsTable').DataTable({
                    "paging": true, // Activer la pagination
                    "pageLength": 5 // Nombre d'éléments par page
                });
            });
        </script>
        <script>
            $(document).ready(function () {
                $('#bsTableNew').DataTable({
                    "paging": true, // Activer la pagination
                    "pageLength": 5 // Nombre d'éléments par page
                });
            });
        </script>
        <!--popup d'edit'-->
        <script>
            // Sélectionnez tous les éléments avec la classe "edit-link"
            var editLinks = document.querySelectorAll('.edit-link');

            // Ajoutez un gestionnaire d'événements click à chaque lien d'édition
            editLinks.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault(); // Empêche le comportement par défaut du lien

                    // Obtenez l'ID du bulletin de soin à partir de l'attribut data-bsid
                    var idBs = this.getAttribute('data-bsid');

                    // Appelez la fonction EditbsRecord avec l'ID du bulletin de soin
                    EditbsRecord(idBs);
                });
            });



            // affichage nouveau bs


            // Sélectionnez tous les éléments avec la classe "edit-link"
            var detailslink = document.querySelectorAll('.details-linkNew');

            // Ajoutez un gestionnaire d'événements click à chaque lien d'édition
            detailslink.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault(); // Empêche le comportement par défaut du lien

                    // Obtenez l'ID du bulletin de soin à partir de l'attribut data-bsid
                    var idBs = this.getAttribute('data-bsid');

                    // Appelez la fonction EditbsRecord avec l'ID du bulletin de soin
                    voirPlus(idBs);
                });
            });


            // Sélectionnez tous les éléments avec la classe "edit-link"
            var detailslink = document.querySelectorAll('.details-link');

            // Ajoutez un gestionnaire d'événements click à chaque lien d'édition
            detailslink.forEach(function (link) {
                link.addEventListener('click', function (event) {
                    event.preventDefault(); // Empêche le comportement par défaut du lien

                    // Obtenez l'ID du bulletin de soin à partir de l'attribut data-bsid
                    var idBs = this.getAttribute('data-bsid');

                    // Appelez la fonction EditbsRecord avec l'ID du bulletin de soin
                    ShowbsDetails(idBs);
                });
            });
        </script>





        <!-- Contact Section-->
        <section class="page-section" id="contact">
            <div class="container">
                <!-- Contact Section Heading-->
                <h2 class="page-section-heading text-center text-uppercase text-secondary mb-0">Contact Me</h2>
                <!-- Icon Divider-->
                <div class="divider-custom">
                    <div class="divider-custom-line"></div>
                    <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                    <div class="divider-custom-line"></div>
                </div>
                <!-- Contact Section Form-->
                <div class="row justify-content-center">
                    <div class="col-lg-8 col-xl-7">
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- * * SB Forms Contact Form * *-->
                        <!-- * * * * * * * * * * * * * * *-->
                        <!-- This form is pre-integrated with SB Forms.-->
                        <!-- To make this form functional, sign up at-->
                        <!-- https://startbootstrap.com/solution/contact-forms-->
                        <!-- to get an API token!-->
                        <form id="contactForm" data-sb-form-api-token="API_TOKEN">
                            <!-- Name input-->
                            <div class="form-floating mb-3">
                                <input class="form-control" id="name" type="text" placeholder="Enter your name..." data-sb-validations="required" />
                                <label for="name">Full name</label>
                                <div class="invalid-feedback" data-sb-feedback="name:required">A name is required.</div>
                            </div>
                            <!-- Email address input-->
                            <div class="form-floating mb-3">
                                <input class="form-control" id="email" type="email" placeholder="name@example.com" data-sb-validations="required,email" />
                                <label for="email">Email address</label>
                                <div class="invalid-feedback" data-sb-feedback="email:required">An email is required.</div>
                                <div class="invalid-feedback" data-sb-feedback="email:email">Email is not valid.</div>
                            </div>
                            <!-- Phone number input-->
                            <div class="form-floating mb-3">
                                <input class="form-control" id="phone" type="tel" placeholder="(123) 456-7890" data-sb-validations="required" />
                                <label for="phone">Phone number</label>
                                <div class="invalid-feedback" data-sb-feedback="phone:required">A phone number is required.</div>
                            </div>
                            <!-- Message input-->
                            <div class="form-floating mb-3">
                                <textarea class="form-control" id="message" type="text" placeholder="Enter your message here..." style="height: 10rem" data-sb-validations="required"></textarea>
                                <label for="message">Message</label>
                                <div class="invalid-feedback" data-sb-feedback="message:required">A message is required.</div>
                            </div>
                            <!-- Submit success message-->
                            <!---->
                            <!-- This is what your users will see when the form-->
                            <!-- has successfully submitted-->
                            <div class="d-none" id="submitSuccessMessage">
                                <div class="text-center mb-3">
                                    <div class="fw-bolder">Form submission successful!</div>
                                    To activate this form, sign up at
                                    <br />
                                    <a href="https://startbootstrap.com/solution/contact-forms">https://startbootstrap.com/solution/contact-forms</a>
                                </div>
                            </div>
                            <!-- Submit error message-->
                            <!---->
                            <!-- This is what your users will see when there is-->
                            <!-- an error submitting the form-->
                            <div class="d-none" id="submitErrorMessage"><div class="text-center text-danger mb-3">Error sending message!</div></div>
                            <!-- Submit Button-->
                            <button class="btn btn-primary btn-xl disabled" id="submitButton" type="submit">Send</button>
                        </form>
                    </div>
                </div>
            </div>
        </section>
        <!-- Footer-->
        <footer class="footer text-center">
            <div class="container">
                <div class="row">
                    <!-- Footer Location-->
                    <div class="col-lg-4 mb-5 mb-lg-0">
                        <h4 class="text-uppercase mb-4">Location</h4>
                        <p class="lead mb-0">
                            2215 John Daniel Drive
                            <br />
                            Clark, MO 65243
                        </p>
                    </div>
                    <!-- Footer Social Icons-->
                    <div class="col-lg-4 mb-5 mb-lg-0">
                        <h4 class="text-uppercase mb-4">Around the Web</h4>
                        <a class="btn btn-outline-light btn-social mx-1" href="#!"><i class="fab fa-fw fa-facebook-f"></i></a>
                        <a class="btn btn-outline-light btn-social mx-1" href="#!"><i class="fab fa-fw fa-twitter"></i></a>
                        <a class="btn btn-outline-light btn-social mx-1" href="#!"><i class="fab fa-fw fa-linkedin-in"></i></a>
                        <a class="btn btn-outline-light btn-social mx-1" href="#!"><i class="fab fa-fw fa-dribbble"></i></a>
                    </div>
                    <!-- Footer About Text-->
                    <div class="col-lg-4">
                        <h4 class="text-uppercase mb-4">About Freelancer</h4>
                        <p class="lead mb-0">
                            Freelance is a free to use, MIT licensed Bootstrap theme created by
                            <a href="http://startbootstrap.com">Start Bootstrap</a>
                            .
                        </p>
                    </div>
                </div>
            </div>
        </footer>
        <!-- Copyright Section-->
        <div class="copyright py-4 text-center text-white">
            <div class="container"><small>Copyright &copy; Your Website 2023</small></div>
        </div>





        <!-- Portfolio Modal 1-->
        <div class="portfolio-modal modal fade" id="portfolioModal1" tabindex="-1" aria-labelledby="portfolioModal1" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Log Cabin</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/cabin.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Portfolio Modal 2-->
        <div class="portfolio-modal modal fade" id="portfolioModal2" tabindex="-1" aria-labelledby="portfolioModal2" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Tasty Cake</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/cake.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Portfolio Modal 3-->
        <div class="portfolio-modal modal fade" id="portfolioModal3" tabindex="-1" aria-labelledby="portfolioModal3" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Circus Tent</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/circus.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Portfolio Modal 4-->
        <div class="portfolio-modal modal fade" id="portfolioModal4" tabindex="-1" aria-labelledby="portfolioModal4" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Controller</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/game.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Portfolio Modal 5-->
        <div class="portfolio-modal modal fade" id="portfolioModal5" tabindex="-1" aria-labelledby="portfolioModal5" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Locked Safe</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/safe.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Portfolio Modal 6-->
        <div class="portfolio-modal modal fade" id="portfolioModal6" tabindex="-1" aria-labelledby="portfolioModal6" aria-hidden="true">
            <div class="modal-dialog modal-xl">
                <div class="modal-content">
                    <div class="modal-header border-0"><button class="btn-close" type="button" data-bs-dismiss="modal" aria-label="Close"></button></div>
                    <div class="modal-body text-center pb-5">
                        <div class="container">
                            <div class="row justify-content-center">
                                <div class="col-lg-8">
                                    <!-- Portfolio Modal - Title-->
                                    <h2 class="portfolio-modal-title text-secondary text-uppercase mb-0">Submarine</h2>
                                    <!-- Icon Divider-->
                                    <div class="divider-custom">
                                        <div class="divider-custom-line"></div>
                                        <div class="divider-custom-icon"><i class="fas fa-star"></i></div>
                                        <div class="divider-custom-line"></div>
                                    </div>
                                    <!-- Portfolio Modal - Image-->
                                    <img class="img-fluid rounded mb-5" src="assets/img/portfolio/submarine.png" alt="..." />
                                    <!-- Portfolio Modal - Text-->
                                    <p class="mb-4">Lorem ipsum dolor sit amet, consectetur adipisicing elit. Mollitia neque assumenda ipsam nihil, molestias magnam, recusandae quos quis inventore quisquam velit asperiores, vitae? Reprehenderit soluta, eos quod consequuntur itaque. Nam.</p>
                                    <button class="btn btn-primary" data-bs-dismiss="modal">
                                        <i class="fas fa-xmark fa-fw"></i>
                                        Close Window
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- Bootstrap core JS-->
        <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.2.3/dist/js/bootstrap.bundle.min.js"></script>
        <!-- Core theme JS-->
        <script src="js/scripts.js"></script>
        <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *-->
        <!-- * *                               SB Forms JS                               * *-->
        <!-- * * Activate your form at https://startbootstrap.com/solution/contact-forms * *-->
        <!-- * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *-->
        <script src="https://cdn.startbootstrap.com/sb-forms-latest.js"></script>
</body>

